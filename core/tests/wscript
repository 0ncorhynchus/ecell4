#! /usr/bin/env python
# encoding: utf-8

def configure(conf):
    pass

def build(bld):
    # bld.program(
    #     features='cxx cxxprogram test',
    #     source='Position3_test.cpp',
    #     target='Position3_test',
    #     includes='..',
    #     lib=['gsl', 'gslcblas', 'm'],
    #     use='unittestmain ecell4-core CPPUNIT')

    # bld.program(
    #     features='cxx cxxprogram test',
    #     source='RandomNumberGenerator_test.cpp',
    #     target='RandomNumberGenerator_test',
    #     includes='..',
    #     lib=['gsl', 'gslcblas', 'm'],
    #     use='unittestmain ecell4-core CPPUNIT')

    # bld.program(
    #     features='cxx cxxprogram test',
    #     source='NetworkModel_test.cpp',
    #     target='NetworkModel_test',
    #     includes='..',
    #     lib=['gsl', 'gslcblas', 'm'],
    #     use='unittestmain ecell4-core CPPUNIT')

    # bld.program(
    #     features='cxx cxxprogram test',
    #     source='CompartmentSpace_test.cpp',
    #     target='CompartmentSpace_test',
    #     includes='..',
    #     lib=['gsl', 'gslcblas', 'm'],
    #     use='unittestmain ecell4-core CPPUNIT')

    # bld.program(
    #     features='cxx cxxprogram test',
    #     source='ParticleSpace_test.cpp',
    #     target='ParticleSpace_test',
    #     includes='..',
    #     lib=['gsl', 'gslcblas', 'm'],
    #     use='unittestmain ecell4-core CPPUNIT')

    # bld.program(
    #     features='cxx cxxstlib',
    #     source='main.cpp',
    #     use='CPPUNIT',
    #     target='unittestmain')

    if bld.env.unit_test == True:
        bld.program(
            source = 'boosttest.cpp',
            includes = ['.'],
            target = 'boosttest',
            defines = ['UNITTEST'],
            use = 'ecell4-core',
        )
