#! /usr/bin/env python
# encoding: utf-8

top = '.'
out = 'build'

hppfiles = [
    'CompartmentSpace.hpp', 'exceptions.hpp', 'Identifier.hpp',
    'Journal.hpp', 'linear_algebra.hpp', 'Model.hpp', 'NetworkModel.hpp',
    'Particle.hpp', 'ParticleSpace.hpp', 'Position3.hpp',
    'RandomNumberGenerator.hpp', 'ReactionRule.hpp', 'SerialIDGenerator.hpp',
    'Simulator.hpp', 'Space.hpp', 'Species.hpp', 'types.hpp'
    ]

cppfiles = [
    'Journal.cpp', 'Species.cpp', 'ParticleSpace.cpp',
    'CompartmentSpace.cpp', 'NetworkModel.cpp', 'Position3.cpp'
    ]

def options(opt):
    opt.add_option('--unit-test', action='store_true', default=False, help='unit test')
    opt.load('compiler_cxx')

def configure(conf):
    conf.load('compiler_cxx')
    conf.check_cfg(package='gsl', uselib_store='gsl', atleat_version='1.13', args='--cflags --libs')
    conf.env.unit_test = conf.options.unit_test

def build(bld):
    bld.install_files(
        '${PREFIX}/include/ecell4/core', hppfiles)
    bld.shlib(
        source = cppfiles,
        includes = ['.'],
        lib = ['gsl', 'gslcblas', 'm'],
        target = 'ecell4-core')

    bld.recurse('tests')
