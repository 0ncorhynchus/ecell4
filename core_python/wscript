#! /usr/bin/env python
# encoding: utf-8

from waflib import Logs


top = '.'
out = 'build'

pxdfiles = [
    'ecell4/core.pxd', 'ecell4/multiset.pxd', 'ecell4/shared_ptr.pxd',
    'ecell4/types.pxd', 'ecell4/p3operator.pxd',
    'ecell4/create_reaction_rule.pxd', 'ecell4/util.pxd'
    ]


def options(opt):
    # opt.add_option(
    #     '--doxygen', action = 'store_true', default = False,
    #     help = 'generate docs using doxygen')
    # opt.load('compiler_cxx boost')

    opt.load('compiler_cxx')
    opt.load('compiler_c')
    opt.load('python')
    opt.load('cython')
    # opt.load('cython_cache', tooldir='.')

def configure(conf):
    conf.load('compiler_cxx')
    conf.load('compiler_c')
    conf.load('python')
    conf.check_python_headers()

    conf.find_program('cython')
    try:
        conf.load('cython')
    except conf.errors.ConfigurationError:
        Logs.warn('cython not found')

    # # check cython's version
    # try:
    #     from Cython.Compiler.Version import version
    #     print 'Cython version: ', version
    #     # if float(version) < minimal_cython_version:
    #     #     raise conf.errors.ConfigurationError
    # except conf.errors.ConfigurationError:
    #     Logs.warn('Your cython is too old.')

def build(bld):
    bld.install_files('${PYTHONDIR}/ecell4', pxdfiles)
    bld.install_files('${PYTHONDIR}/ecell4', 'ecell4/__init__.py')
    bld(
        features = 'cxx cxxshlib pyext',
        source = 'ecell4/core.pyx',
        target = 'core',
        # includes = ['.'],
        install_path = '${PYTHONDIR}/ecell4',
        lib = ['ecell4-core'])

    # bld.recurse('tests')
