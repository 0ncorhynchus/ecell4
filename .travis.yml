dist: trusty
sudo: required
language: cpp
os:
- linux
- osx
compiler:
- gcc
- clang
matrix:
  exclude:
  - os: osx
    compiler: gcc

addons:
  apt:
    sources:
#    - sourceline: 'ppa:mc3man/trusty-media'
    - ubuntu-toolchain-r-test
    packages:
    - cmake
    - clang
    - libboost-dev
    - libgsl0-dev
    - libhdf5-serial-dev
    - python-dev
    - python3-dev
    - python3
    - python
    - wget
#    - ffmpeg

before_install:
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then wget https://bootstrap.pypa.io/get-pip.py; sudo /usr/bin/python2 get-pip.py; sudo /usr/bin/python3 get-pip.py; sudo /usr/local/bin/pip2 install -U cython numpy matplotlib ipykernel; sudo /usr/local/bin/pip3 install -U cython jupyter numpy matplotlib; /usr/bin/python2 -m ipykernel install --user; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; brew upgrade; brew install gsl ffmpeg; brew install homebrew/science/hdf5; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then curl -O https://bootstrap.pypa.io/get-pip.py; /usr/local/bin/python get-pip.py; /usr/local/bin/python -m pip install -U cython numpy matplotlib jupyter; fi

script:
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then bash -c 'cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DPYTHON_EXECUTABLE:FILEPATH=/usr/bin/python3 . && make && make test && sudo make install'; rm CMakeCache.txt; fi
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then bash -c 'cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DPYTHON_EXECUTABLE:FILEPATH=/usr/bin/python2 . && make && make test && sudo make install'; rm CMakeCache.txt; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then sudo bash -c 'cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DPYTHON_EXECUTABLE:FILEPATH=/usr/local/bin/python . && make && make test && make install'; rm CMakeCache.txt; fi

- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ldd /usr/local/lib/libecell4-core.so; mkdir surge; mkdir surge/py2; mkdir surge/py3; cd ecell4-notebooks/Tutorials; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then jupyter nbconvert --to=html --ExecutePreprocessor.enabled=True --ExecutePreprocessor.timeout=3600 --ExecutePreprocessor.kernel_name='python3' '1. Brief Tour of E-Cell4 Simulations.ipynb' '2. How to Build a Model.ipynb' '3. How to Setup the Initial Condition.ipynb' '4. How to Run a Simulation.ipynb' '6. How to Solve ODEs with Rate Law Functions.ipynb' '7. Introduction of Rule-based Modeling.ipynb' '8. More about 1. Brief Tour of E-Cell4 Simulations.ipynb' '9. Spatial Gillespie Method.ipynb' '10. Spatiocyte Method.ipynb'; mv *.html ../../surge/py3/; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then jupyter nbconvert --to=html --ExecutePreprocessor.enabled=True --ExecutePreprocessor.timeout=3600 --ExecutePreprocessor.kernel_name='python2' '1. Brief Tour of E-Cell4 Simulations.ipynb' '2. How to Build a Model.ipynb' '3. How to Setup the Initial Condition.ipynb' '4. How to Run a Simulation.ipynb' '6. How to Solve ODEs with Rate Law Functions.ipynb' '7. Introduction of Rule-based Modeling.ipynb' '8. More about 1. Brief Tour of E-Cell4 Simulations.ipynb' '9. Spatial Gillespie Method.ipynb' '10. Spatiocyte Method.ipynb'; mv *.html ../../surge/py2/; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cd ecell4-notebooks/Tutorials; /usr/local/bin/python -m jupyter nbconvert --to=html --ExecutePreprocessor.enabled=True --ExecutePreprocessor.timeout=3600 --ExecutePreprocessor.kernel_name='python2' '1. Brief Tour of E-Cell4 Simulations.ipynb' '2. How to Build a Model.ipynb' '3. How to Setup the Initial Condition.ipynb' '4. How to Run a Simulation.ipynb' '6. How to Solve ODEs with Rate Law Functions.ipynb' '7. Introduction of Rule-based Modeling.ipynb' '8. More about 1. Brief Tour of E-Cell4 Simulations.ipynb' '9. Spatial Gillespie Method.ipynb' '10. Spatiocyte Method.ipynb'; fi

deploy:
  provider: surge
  project: ./surge/
  domain: dangerous-marble.surge.sh  

notifications:
  webhooks:
    urls:
    - http://dev.e-cell.org/ecell-bot/travis/notification
  slack:
    secure: kCN8PCrinRfaDFKn93TMrYY5LberBt8GHDHOtSbR7B1Zmo9Pr/uHxxqoXlu1g9XYxgs2lud/AKo0gKMu8n+QHWeAXaOwe8GSccEqBdilXDVp4fzO96jT2R82RYljQ2wAR5ug1YIACRq06mtFn6U7GRZRnpRI4VsEUFLJPljZ+UM=
