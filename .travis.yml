dist: trusty
sudo: false
language: cpp
matrix:
  include:
  - ox: linux
    compiler: gcc
    language: python
    python: "2.7"
  - ox: linux
    compiler: clang
    language: python
    python: "2.7"
  - ox: linux
    compiler: gcc
    language: python
    python: "3.5"
  - ox: linux
    compiler: clang
    language: python
    python: "3.5"
  - ox: osx
    compiler: clang
    language: python
    python: "2.7"
  - ox: osx
    compiler: clang
    language: python
    python: "3.5"

addons:
  apt:
    sources:
#    - sourceline: 'ppa:mc3man/trusty-media'
    - ubuntu-toolchain-r-test
    packages:
    - cmake
    - clang
    - libboost-dev
    - libgsl0-dev
    - libhdf5-serial-dev
    - python-dev
    - python3-dev
    - python3
    - python
    - wget
#    - ffmpeg

before_install:
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then if [[ $TRAVIS_PYTHON_VERSION == 2* ]]; then mkdir ~/local; wget https://bootstrap.pypa.io/get-pip.py; /usr/bin/python2 get-pip.py --user; /usr/bin/python2 -m pip install -U --user cython numpy matplotlib ipykernel; fi; fi
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then if [[ $TRAVIS_PYTHON_VERSION == 3* ]]; then mkdir ~/local; wget https://bootstrap.pypa.io/get-pip.py; /usr/bin/python3 get-pip.py --user; /usr/bin/python3 -m pip install -U --user cython jupyter numpy matplotlib; fi; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; brew upgrade; brew install gsl ffmpeg; brew install homebrew/science/hdf5; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then curl -O https://bootstrap.pypa.io/get-pip.py; /usr/local/bin/python get-pip.py; /usr/local/bin/python -m pip install -U cython numpy matplotlib jupyter; fi

script:
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then if [[ $TRAVIS_PYTHON_VERSION == 2* ]]; then bash -c 'cmake -DCMAKE_INSTALL_PREFIX=~/local -DPYTHON_EXECUTABLE:FILEPATH=/usr/bin/python2 . && make && make test && make install'; rm CMakeCache.txt; fi;  fi
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then if [[ $TRAVIS_PYTHON_VERSION == 3* ]]; then bash -c 'cmake -DCMAKE_INSTALL_PREFIX=~/local -DPYTHON_EXECUTABLE:FILEPATH=/usr/bin/python3 . && make && make test && make install'; rm CMakeCache.txt; fi; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then sudo bash -c 'cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DPYTHON_EXECUTABLE:FILEPATH=/usr/local/bin/python . && make && make test && make install'; rm CMakeCache.txt; fi

- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ldd /usr/local/lib/libecell4-core.so; mkdir surge; cd ecell4-notebooks/Tutorials; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then if [[ $TRAVIS_PYTHON_VERSION == 2* ]]; then LD_LIBRARY_PATH=~/local/lib:$LD_LIBRARY_PATH PYTHONPATH=~/local/lib/python2.7/site-packages:$PYTHON_PATH jupyter nbconvert --to=html --ExecutePreprocessor.enabled=True --ExecutePreprocessor.timeout=3600 --ExecutePreprocessor.kernel_name='python2' tutorial1.ipynb tutorial2.ipynb tutorial3.ipynb tutorial4.ipynb tutorial6.ipynb tutorial7.ipynb tutorial8.ipynb tutorial9.ipynb tutorial10.ipynb; fi; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then if [[ $TRAVIS_PYTHON_VERSION == 3* ]]; then LD_LIBRARY_PATH=~/local/lib:$LD_LIBRARY_PATH PYTHONPATH=~/local/lib/python3.5/site-packages:$PYTHON_PATH jupyter nbconvert --to=html --ExecutePreprocessor.enabled=True --ExecutePreprocessor.timeout=3600 --ExecutePreprocessor.kernel_name='python3' tutorial1.ipynb tutorial2.ipynb tutorial3.ipynb tutorial4.ipynb tutorial6.ipynb tutorial7.ipynb tutorial8.ipynb tutorial9.ipynb tutorial10.ipynb; mv *.html ../../surge/; fi; fi
- if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then mv *.html ../../surge/; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then mkdir surge; cd ecell4-notebooks/Tutorials; /usr/local/bin/python -m jupyter nbconvert --to=html --ExecutePreprocessor.enabled=True --ExecutePreprocessor.timeout=3600 --ExecutePreprocessor.kernel_name='python2' tutorial1.ipynb tutorial2.ipynb tutorial3.ipynb tutorial4.ipynb tutorial6.ipynb tutorial7.ipynb tutorial8.ipynb tutorial9.ipynb tutorial10.ipynb; mv *.html ../../surge/; fi

deploy:
  provider: surge
  project: ./surge/
  domain: ecell4.surge.sh

notifications:
  webhooks:
    urls:
    - http://dev.e-cell.org/ecell-bot/travis/notification
  slack:
    secure: kCN8PCrinRfaDFKn93TMrYY5LberBt8GHDHOtSbR7B1Zmo9Pr/uHxxqoXlu1g9XYxgs2lud/AKo0gKMu8n+QHWeAXaOwe8GSccEqBdilXDVp4fzO96jT2R82RYljQ2wAR5ug1YIACRq06mtFn6U7GRZRnpRI4VsEUFLJPljZ+UM=
