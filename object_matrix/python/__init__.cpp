/* Generated by Cython 0.9.6.13.1 on Fri May  2 22:52:19 2008 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#include "structmember.h"
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   PyInt_AsLong(o)
  #define PyNumber_Index(o)    PyNumber_Int(o)
  #define PyIndex_Check(o)     PyNumber_Check(o)
#endif
#if PY_VERSION_HEX < 0x02040000
  #define METH_COEXIST 0
#endif
#ifndef __stdcall
  #define __stdcall
#endif
#ifndef __cdecl
  #define __cdecl
#endif
#ifdef __cplusplus
#define __PYX_EXTERN_C extern "C"
#else
#define __PYX_EXTERN_C extern
#endif
#include <math.h>
#include "pyrex_helper.hpp"
#include "position.hpp"
#include "_sphere.hpp"
#include "_object_container.hpp"


#ifdef __GNUC__
#define INLINE __inline__
#elif _WIN32
#define INLINE __inline
#else
#define INLINE 
#endif

typedef struct {PyObject **p; char *s;} __Pyx_InternTabEntry; /*proto*/
typedef struct {PyObject **p; char *s; long n; int is_unicode;} __Pyx_StringTabEntry; /*proto*/



static int __pyx_skip_dispatch = 0;


/* Type Conversion Predeclarations */

#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static INLINE int __Pyx_PyObject_IsTrue(PyObject* x);
static INLINE PY_LONG_LONG __pyx_PyInt_AsLongLong(PyObject* x);
static INLINE unsigned PY_LONG_LONG __pyx_PyInt_AsUnsignedLongLong(PyObject* x);
static INLINE Py_ssize_t __pyx_PyIndex_AsSsize_t(PyObject* b);

#define __pyx_PyInt_AsLong(x) (PyInt_CheckExact(x) ? PyInt_AS_LONG(x) : PyInt_AsLong(x))
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))

static INLINE unsigned char __pyx_PyInt_unsigned_char(PyObject* x);
static INLINE unsigned short __pyx_PyInt_unsigned_short(PyObject* x);
static INLINE char __pyx_PyInt_char(PyObject* x);
static INLINE short __pyx_PyInt_short(PyObject* x);
static INLINE int __pyx_PyInt_int(PyObject* x);
static INLINE long __pyx_PyInt_long(PyObject* x);
static INLINE signed char __pyx_PyInt_signed_char(PyObject* x);
static INLINE signed short __pyx_PyInt_signed_short(PyObject* x);
static INLINE signed int __pyx_PyInt_signed_int(PyObject* x);
static INLINE signed long __pyx_PyInt_signed_long(PyObject* x);
static INLINE long double __pyx_PyInt_long_double(PyObject* x);
#ifdef __GNUC__
/* Test for GCC > 2.95 */
#if __GNUC__ > 2 ||               (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)) 
#define likely(x)   __builtin_expect(!!(x), 1)
#define unlikely(x) __builtin_expect(!!(x), 0)
#else /* __GNUC__ > 2 ... */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
#define likely(x)   (x)
#define unlikely(x) (x)
#endif /* __GNUC__ */
    
static PyObject *__pyx_m;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static char * __pyx_cfilenm= __FILE__;
static char *__pyx_filename;
static char **__pyx_f;

static INLINE void __Pyx_RaiseArgtupleTooLong(Py_ssize_t num_expected, Py_ssize_t num_found); /*proto*/

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed, char *name); /*proto*/

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name); /*proto*/

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb); /*proto*/

static int __Pyx_InternStrings(__Pyx_InternTabEntry *t); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/

static int __Pyx_ExportFunction(char *n, void *f, char *s); /*proto*/

static void __Pyx_AddTraceback(char *funcname); /*proto*/

/* Declarations */

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":138
 *         return retval
 * 
 * cdef class __ObjectContainer_iterneighbors_cyclic_iter:             # <<<<<<<<<<<<<< 
 *     cdef __impl_object_container_iterneighbors_gen *pimpl
 *     cdef __impl_object_container *oc_pimpl
 */

struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter {
  PyObject_HEAD
  take_neighbor_collector::generator_type *pimpl;
  my_object_container_type *oc_pimpl;
  sphere<double> *sphere_pimpl;
};

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":34
 *             __helper_set_double(self.pimpl.z(), val)
 * 
 * cdef class Sphere:             # <<<<<<<<<<<<<< 
 *     cdef __impl_sphere *pimpl
 * 
 */

struct __pyx_obj_13object_matrix_Sphere {
  PyObject_HEAD
  sphere<double> *pimpl;
};

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":105
 * cdef class ObjectContainer
 * 
 * cdef class __ObjectContainer_iterneighbors_iter:             # <<<<<<<<<<<<<< 
 *     cdef __impl_object_container_iterneighbors_gen *pimpl
 *     cdef __impl_object_container *oc_pimpl
 */

struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter {
  PyObject_HEAD
  take_neighbor_collector::generator_type *pimpl;
  my_object_container_type *oc_pimpl;
  sphere<double> *sphere_pimpl;
};

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":7
 * include "ObjectContainer.pxi"
 * 
 * cdef class Position:             # <<<<<<<<<<<<<< 
 *     cdef __impl_position *pimpl
 * 
 */

struct __pyx_obj_13object_matrix_Position {
  PyObject_HEAD
  position<double> *pimpl;
};

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":103
 *             __helper_set_double(self.pimpl.radius(), val)
 * 
 * cdef class ObjectContainer             # <<<<<<<<<<<<<< 
 * 
 * cdef class __ObjectContainer_iterneighbors_iter:
 */

struct __pyx_obj_13object_matrix_ObjectContainer {
  PyObject_HEAD
  my_object_container_type *pimpl;
};

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":67
 *             __helper_set_double(self.pimpl.radius, val)
 * 
 * cdef class SphereRef:             # <<<<<<<<<<<<<< 
 *     cdef __impl_sphere_ref *pimpl
 * 
 */

struct __pyx_obj_13object_matrix_SphereRef {
  PyObject_HEAD
  sphere_ref *pimpl;
};

static PyTypeObject *__pyx_ptype_13object_matrix_Position = 0;
static PyTypeObject *__pyx_ptype_13object_matrix_Sphere = 0;
static PyTypeObject *__pyx_ptype_13object_matrix_SphereRef = 0;
static PyTypeObject *__pyx_ptype_13object_matrix_ObjectContainer = 0;
static PyTypeObject *__pyx_ptype_13object_matrix___ObjectContainer_iterneighbors_iter = 0;
static PyTypeObject *__pyx_ptype_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter = 0;
static PyObject *__pyx_k_1;


/* Implementation of object_matrix */


static PyObject *__pyx_int_1;

static PyObject *__pyx_n___cinit__;
static PyObject *__pyx_n___dealloc__;
static PyObject *__pyx_n___repr__;
static PyObject *__pyx_n_next;
static PyObject *__pyx_n___getitem__;
static PyObject *__pyx_n___setitem__;
static PyObject *__pyx_n___len__;
static PyObject *__pyx_n_iterneighbors;
static PyObject *__pyx_n_iterneighbors_cyclic;

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":10
 *     cdef __impl_position *pimpl
 * 
 *     def __cinit__(self, double x = 0, double y = 0, double z = 0):             # <<<<<<<<<<<<<< 
 *         self.pimpl = __impl_position_new(x, y, z)
 * 
 */

static int __pyx_pf_13object_matrix_8Position___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_13object_matrix_8Position___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_x;
  double __pyx_v_y;
  double __pyx_v_z;
  int __pyx_r;
  static char *__pyx_argnames[] = {"x","y","z",0};
  __pyx_v_x = ((double)0);
  __pyx_v_y = ((double)0);
  __pyx_v_z = ((double)0);
  if (likely(!__pyx_kwds) && likely(0 <= PyTuple_GET_SIZE(__pyx_args)) && likely(PyTuple_GET_SIZE(__pyx_args) <= 3)) {
    if (PyTuple_GET_SIZE(__pyx_args) > 0) {
      __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L2;}
      if (PyTuple_GET_SIZE(__pyx_args) > 1) {
        __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L2;}
        if (PyTuple_GET_SIZE(__pyx_args) > 2) {
          __pyx_v_z = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L2;}
        }
      }
    }
  }
  else {
    if (unlikely(!PyArg_ParseTupleAndKeywords(__pyx_args, __pyx_kwds, "|ddd", __pyx_argnames, &__pyx_v_x, &__pyx_v_y, &__pyx_v_z))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L2;}
  }
  goto __pyx_L3;
  __pyx_L2:;
  __Pyx_AddTraceback("object_matrix.Position.__cinit__");
  return -1;
  __pyx_L3:;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":11
 * 
 *     def __cinit__(self, double x = 0, double y = 0, double z = 0):
 *         self.pimpl = __impl_position_new(x, y, z)             # <<<<<<<<<<<<<< 
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_13object_matrix_Position *)__pyx_v_self)->pimpl = new position<double>(__pyx_v_x, __pyx_v_y, __pyx_v_z);

  __pyx_r = 0;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":13
 *         self.pimpl = __impl_position_new(x, y, z)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<< 
 *         __impl_position_del(self.pimpl)
 * 
 */

static void __pyx_pf_13object_matrix_8Position___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_13object_matrix_8Position___dealloc__(PyObject *__pyx_v_self) {

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":14
 * 
 *     def __dealloc__(self):
 *         __impl_position_del(self.pimpl)             # <<<<<<<<<<<<<< 
 * 
 *     property x:
 */
  delete(((struct __pyx_obj_13object_matrix_Position *)__pyx_v_self)->pimpl);

}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":17
 * 
 *     property x:
 *         def __get__(self):             # <<<<<<<<<<<<<< 
 *             return self.pimpl.x()
 *         def __set__(self, val):
 */

static PyObject *__pyx_pf_13object_matrix_8Position_1x___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_8Position_1x___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":18
 *     property x:
 *         def __get__(self):
 *             return self.pimpl.x()             # <<<<<<<<<<<<<< 
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.x(), val)
 */
  __pyx_1 = PyFloat_FromDouble(((struct __pyx_obj_13object_matrix_Position *)__pyx_v_self)->pimpl->x()); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 18; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.Position.x.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":19
 *         def __get__(self):
 *             return self.pimpl.x()
 *         def __set__(self, val):             # <<<<<<<<<<<<<< 
 *             __helper_set_double(self.pimpl.x(), val)
 * 
 */

static int __pyx_pf_13object_matrix_8Position_1x___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pf_13object_matrix_8Position_1x___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  double __pyx_1;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":20
 *             return self.pimpl.x()
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.x(), val)             # <<<<<<<<<<<<<< 
 * 
 *     property y:
 */
  __pyx_1 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 20; __pyx_clineno = __LINE__; goto __pyx_L1;}
  pyrex_helper::ref_set<double>(((struct __pyx_obj_13object_matrix_Position *)__pyx_v_self)->pimpl->x(), __pyx_1);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.Position.x.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":23
 * 
 *     property y:
 *         def __get__(self):             # <<<<<<<<<<<<<< 
 *             return self.pimpl.y()
 *         def __set__(self, val):
 */

static PyObject *__pyx_pf_13object_matrix_8Position_1y___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_8Position_1y___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":24
 *     property y:
 *         def __get__(self):
 *             return self.pimpl.y()             # <<<<<<<<<<<<<< 
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.y(), val)
 */
  __pyx_1 = PyFloat_FromDouble(((struct __pyx_obj_13object_matrix_Position *)__pyx_v_self)->pimpl->y()); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 24; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.Position.y.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":25
 *         def __get__(self):
 *             return self.pimpl.y()
 *         def __set__(self, val):             # <<<<<<<<<<<<<< 
 *             __helper_set_double(self.pimpl.y(), val)
 * 
 */

static int __pyx_pf_13object_matrix_8Position_1y___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pf_13object_matrix_8Position_1y___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  double __pyx_1;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":26
 *             return self.pimpl.y()
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.y(), val)             # <<<<<<<<<<<<<< 
 * 
 *     property z:
 */
  __pyx_1 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 26; __pyx_clineno = __LINE__; goto __pyx_L1;}
  pyrex_helper::ref_set<double>(((struct __pyx_obj_13object_matrix_Position *)__pyx_v_self)->pimpl->y(), __pyx_1);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.Position.y.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":29
 * 
 *     property z:
 *         def __get__(self):             # <<<<<<<<<<<<<< 
 *             return self.pimpl.z()
 *         def __set__(self, val):
 */

static PyObject *__pyx_pf_13object_matrix_8Position_1z___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_8Position_1z___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":30
 *     property z:
 *         def __get__(self):
 *             return self.pimpl.z()             # <<<<<<<<<<<<<< 
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.z(), val)
 */
  __pyx_1 = PyFloat_FromDouble(((struct __pyx_obj_13object_matrix_Position *)__pyx_v_self)->pimpl->z()); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 30; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.Position.z.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":31
 *         def __get__(self):
 *             return self.pimpl.z()
 *         def __set__(self, val):             # <<<<<<<<<<<<<< 
 *             __helper_set_double(self.pimpl.z(), val)
 * 
 */

static int __pyx_pf_13object_matrix_8Position_1z___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pf_13object_matrix_8Position_1z___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  double __pyx_1;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":32
 *             return self.pimpl.z()
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.z(), val)             # <<<<<<<<<<<<<< 
 * 
 * cdef class Sphere:
 */
  __pyx_1 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 32; __pyx_clineno = __LINE__; goto __pyx_L1;}
  pyrex_helper::ref_set<double>(((struct __pyx_obj_13object_matrix_Position *)__pyx_v_self)->pimpl->z(), __pyx_1);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.Position.z.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":37
 *     cdef __impl_sphere *pimpl
 * 
 *     def __cinit__(self, double x = 0, double y = 0, double z = 0, double radius = 0):             # <<<<<<<<<<<<<< 
 *         self.pimpl = __impl_sphere_new(x, y, z, radius)
 * 
 */

static int __pyx_pf_13object_matrix_6Sphere___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_13object_matrix_6Sphere___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_x;
  double __pyx_v_y;
  double __pyx_v_z;
  double __pyx_v_radius;
  int __pyx_r;
  static char *__pyx_argnames[] = {"x","y","z","radius",0};
  __pyx_v_x = ((double)0);
  __pyx_v_y = ((double)0);
  __pyx_v_z = ((double)0);
  __pyx_v_radius = ((double)0);
  if (likely(!__pyx_kwds) && likely(0 <= PyTuple_GET_SIZE(__pyx_args)) && likely(PyTuple_GET_SIZE(__pyx_args) <= 4)) {
    if (PyTuple_GET_SIZE(__pyx_args) > 0) {
      __pyx_v_x = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L2;}
      if (PyTuple_GET_SIZE(__pyx_args) > 1) {
        __pyx_v_y = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 1)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L2;}
        if (PyTuple_GET_SIZE(__pyx_args) > 2) {
          __pyx_v_z = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 2)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L2;}
          if (PyTuple_GET_SIZE(__pyx_args) > 3) {
            __pyx_v_radius = __pyx_PyFloat_AsDouble(PyTuple_GET_ITEM(__pyx_args, 3)); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L2;}
          }
        }
      }
    }
  }
  else {
    if (unlikely(!PyArg_ParseTupleAndKeywords(__pyx_args, __pyx_kwds, "|dddd", __pyx_argnames, &__pyx_v_x, &__pyx_v_y, &__pyx_v_z, &__pyx_v_radius))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 37; __pyx_clineno = __LINE__; goto __pyx_L2;}
  }
  goto __pyx_L3;
  __pyx_L2:;
  __Pyx_AddTraceback("object_matrix.Sphere.__cinit__");
  return -1;
  __pyx_L3:;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":38
 * 
 *     def __cinit__(self, double x = 0, double y = 0, double z = 0, double radius = 0):
 *         self.pimpl = __impl_sphere_new(x, y, z, radius)             # <<<<<<<<<<<<<< 
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_self)->pimpl = __impl_sphere_new(__pyx_v_x, __pyx_v_y, __pyx_v_z, __pyx_v_radius);

  __pyx_r = 0;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":40
 *         self.pimpl = __impl_sphere_new(x, y, z, radius)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<< 
 *         __impl_sphere_del(self.pimpl)
 * 
 */

static void __pyx_pf_13object_matrix_6Sphere___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_13object_matrix_6Sphere___dealloc__(PyObject *__pyx_v_self) {

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":41
 * 
 *     def __dealloc__(self):
 *         __impl_sphere_del(self.pimpl)             # <<<<<<<<<<<<<< 
 * 
 *     property x:
 */
  delete(((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_self)->pimpl);

}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":44
 * 
 *     property x:
 *         def __get__(self):             # <<<<<<<<<<<<<< 
 *             return self.pimpl.x()
 *         def __set__(self, val):
 */

static PyObject *__pyx_pf_13object_matrix_6Sphere_1x___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_6Sphere_1x___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":45
 *     property x:
 *         def __get__(self):
 *             return self.pimpl.x()             # <<<<<<<<<<<<<< 
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.x(), val)
 */
  __pyx_1 = PyFloat_FromDouble(((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_self)->pimpl->position.x()); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 45; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.Sphere.x.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":46
 *         def __get__(self):
 *             return self.pimpl.x()
 *         def __set__(self, val):             # <<<<<<<<<<<<<< 
 *             __helper_set_double(self.pimpl.x(), val)
 * 
 */

static int __pyx_pf_13object_matrix_6Sphere_1x___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pf_13object_matrix_6Sphere_1x___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  double __pyx_1;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":47
 *             return self.pimpl.x()
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.x(), val)             # <<<<<<<<<<<<<< 
 * 
 *     property y:
 */
  __pyx_1 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 47; __pyx_clineno = __LINE__; goto __pyx_L1;}
  pyrex_helper::ref_set<double>(((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_self)->pimpl->position.x(), __pyx_1);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.Sphere.x.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":50
 * 
 *     property y:
 *         def __get__(self):             # <<<<<<<<<<<<<< 
 *             return self.pimpl.y()
 *         def __set__(self, val):
 */

static PyObject *__pyx_pf_13object_matrix_6Sphere_1y___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_6Sphere_1y___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":51
 *     property y:
 *         def __get__(self):
 *             return self.pimpl.y()             # <<<<<<<<<<<<<< 
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.y(), val)
 */
  __pyx_1 = PyFloat_FromDouble(((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_self)->pimpl->position.y()); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 51; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.Sphere.y.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":52
 *         def __get__(self):
 *             return self.pimpl.y()
 *         def __set__(self, val):             # <<<<<<<<<<<<<< 
 *             __helper_set_double(self.pimpl.y(), val)
 * 
 */

static int __pyx_pf_13object_matrix_6Sphere_1y___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pf_13object_matrix_6Sphere_1y___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  double __pyx_1;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":53
 *             return self.pimpl.y()
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.y(), val)             # <<<<<<<<<<<<<< 
 * 
 *     property z:
 */
  __pyx_1 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 53; __pyx_clineno = __LINE__; goto __pyx_L1;}
  pyrex_helper::ref_set<double>(((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_self)->pimpl->position.y(), __pyx_1);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.Sphere.y.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":56
 * 
 *     property z:
 *         def __get__(self):             # <<<<<<<<<<<<<< 
 *             return self.pimpl.z()
 *         def __set__(self, val):
 */

static PyObject *__pyx_pf_13object_matrix_6Sphere_1z___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_6Sphere_1z___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":57
 *     property z:
 *         def __get__(self):
 *             return self.pimpl.z()             # <<<<<<<<<<<<<< 
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.z(), val)
 */
  __pyx_1 = PyFloat_FromDouble(((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_self)->pimpl->position.z()); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.Sphere.z.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":58
 *         def __get__(self):
 *             return self.pimpl.z()
 *         def __set__(self, val):             # <<<<<<<<<<<<<< 
 *             __helper_set_double(self.pimpl.z(), val)
 * 
 */

static int __pyx_pf_13object_matrix_6Sphere_1z___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pf_13object_matrix_6Sphere_1z___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  double __pyx_1;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":59
 *             return self.pimpl.z()
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.z(), val)             # <<<<<<<<<<<<<< 
 * 
 *     property radius:
 */
  __pyx_1 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 59; __pyx_clineno = __LINE__; goto __pyx_L1;}
  pyrex_helper::ref_set<double>(((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_self)->pimpl->position.z(), __pyx_1);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.Sphere.z.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":62
 * 
 *     property radius:
 *         def __get__(self):             # <<<<<<<<<<<<<< 
 *             return self.pimpl.radius
 *         def __set__(self, val):
 */

static PyObject *__pyx_pf_13object_matrix_6Sphere_6radius___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_6Sphere_6radius___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":63
 *     property radius:
 *         def __get__(self):
 *             return self.pimpl.radius             # <<<<<<<<<<<<<< 
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.radius, val)
 */
  __pyx_1 = PyFloat_FromDouble(((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_self)->pimpl->radius); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.Sphere.radius.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":64
 *         def __get__(self):
 *             return self.pimpl.radius
 *         def __set__(self, val):             # <<<<<<<<<<<<<< 
 *             __helper_set_double(self.pimpl.radius, val)
 * 
 */

static int __pyx_pf_13object_matrix_6Sphere_6radius___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pf_13object_matrix_6Sphere_6radius___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  double __pyx_1;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":65
 *             return self.pimpl.radius
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.radius, val)             # <<<<<<<<<<<<<< 
 * 
 * cdef class SphereRef:
 */
  __pyx_1 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1;}
  pyrex_helper::ref_set<double>(((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_self)->pimpl->radius, __pyx_1);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.Sphere.radius.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":70
 *     cdef __impl_sphere_ref *pimpl
 * 
 *     def __cinit__(self, int pimpl):             # <<<<<<<<<<<<<< 
 *         self.pimpl = <__impl_sphere_ref*>pimpl
 * 
 */

static int __pyx_pf_13object_matrix_9SphereRef___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_13object_matrix_9SphereRef___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_pimpl;
  int __pyx_r;
  static char *__pyx_argnames[] = {"pimpl",0};
  if (likely(!__pyx_kwds) && likely(PyTuple_GET_SIZE(__pyx_args) == 1)) {
    __pyx_v_pimpl = __pyx_PyInt_int(PyTuple_GET_ITEM(__pyx_args, 0)); if (unlikely((__pyx_v_pimpl == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L2;}
  }
  else {
    if (unlikely(!PyArg_ParseTupleAndKeywords(__pyx_args, __pyx_kwds, "i", __pyx_argnames, &__pyx_v_pimpl))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 70; __pyx_clineno = __LINE__; goto __pyx_L2;}
  }
  goto __pyx_L3;
  __pyx_L2:;
  __Pyx_AddTraceback("object_matrix.SphereRef.__cinit__");
  return -1;
  __pyx_L3:;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":71
 * 
 *     def __cinit__(self, int pimpl):
 *         self.pimpl = <__impl_sphere_ref*>pimpl             # <<<<<<<<<<<<<< 
 * 
 *     def __repr__(self):
 */
  ((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_self)->pimpl = ((sphere_ref *)__pyx_v_pimpl);

  __pyx_r = 0;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":73
 *         self.pimpl = <__impl_sphere_ref*>pimpl
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<< 
 *         return __helper_pystr_from_repr(self.pimpl)
 * 
 */

static PyObject *__pyx_pf_13object_matrix_9SphereRef___repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_9SphereRef___repr__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":74
 * 
 *     def __repr__(self):
 *         return __helper_pystr_from_repr(self.pimpl)             # <<<<<<<<<<<<<< 
 * 
 *     def __dealloc__(self):
 */
  __pyx_1 = pyrex_helper::pystr_from_repr(((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_self)->pimpl); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 74; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.SphereRef.__repr__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":76
 *         return __helper_pystr_from_repr(self.pimpl)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<< 
 *         __impl_sphere_ref_del(self.pimpl)
 * 
 */

static void __pyx_pf_13object_matrix_9SphereRef___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_13object_matrix_9SphereRef___dealloc__(PyObject *__pyx_v_self) {

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":77
 * 
 *     def __dealloc__(self):
 *         __impl_sphere_ref_del(self.pimpl)             # <<<<<<<<<<<<<< 
 * 
 *     property x:
 */
  delete(((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_self)->pimpl);

}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":80
 * 
 *     property x:
 *         def __get__(self):             # <<<<<<<<<<<<<< 
 *             return self.pimpl.x()
 *         def __set__(self, val):
 */

static PyObject *__pyx_pf_13object_matrix_9SphereRef_1x___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_9SphereRef_1x___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":81
 *     property x:
 *         def __get__(self):
 *             return self.pimpl.x()             # <<<<<<<<<<<<<< 
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.x(), val)
 */
  __pyx_1 = PyFloat_FromDouble(((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_self)->pimpl->x()); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 81; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.SphereRef.x.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":82
 *         def __get__(self):
 *             return self.pimpl.x()
 *         def __set__(self, val):             # <<<<<<<<<<<<<< 
 *             __helper_set_double(self.pimpl.x(), val)
 * 
 */

static int __pyx_pf_13object_matrix_9SphereRef_1x___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pf_13object_matrix_9SphereRef_1x___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  double __pyx_1;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":83
 *             return self.pimpl.x()
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.x(), val)             # <<<<<<<<<<<<<< 
 * 
 *     property y:
 */
  __pyx_1 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 83; __pyx_clineno = __LINE__; goto __pyx_L1;}
  pyrex_helper::ref_set<double>(((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_self)->pimpl->x(), __pyx_1);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.SphereRef.x.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":86
 * 
 *     property y:
 *         def __get__(self):             # <<<<<<<<<<<<<< 
 *             return self.pimpl.y()
 *         def __set__(self, val):
 */

static PyObject *__pyx_pf_13object_matrix_9SphereRef_1y___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_9SphereRef_1y___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":87
 *     property y:
 *         def __get__(self):
 *             return self.pimpl.y()             # <<<<<<<<<<<<<< 
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.y(), val)
 */
  __pyx_1 = PyFloat_FromDouble(((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_self)->pimpl->y()); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 87; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.SphereRef.y.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":88
 *         def __get__(self):
 *             return self.pimpl.y()
 *         def __set__(self, val):             # <<<<<<<<<<<<<< 
 *             __helper_set_double(self.pimpl.y(), val)
 * 
 */

static int __pyx_pf_13object_matrix_9SphereRef_1y___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pf_13object_matrix_9SphereRef_1y___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  double __pyx_1;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":89
 *             return self.pimpl.y()
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.y(), val)             # <<<<<<<<<<<<<< 
 * 
 *     property z:
 */
  __pyx_1 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 89; __pyx_clineno = __LINE__; goto __pyx_L1;}
  pyrex_helper::ref_set<double>(((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_self)->pimpl->y(), __pyx_1);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.SphereRef.y.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":92
 * 
 *     property z:
 *         def __get__(self):             # <<<<<<<<<<<<<< 
 *             return self.pimpl.z()
 *         def __set__(self, val):
 */

static PyObject *__pyx_pf_13object_matrix_9SphereRef_1z___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_9SphereRef_1z___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":93
 *     property z:
 *         def __get__(self):
 *             return self.pimpl.z()             # <<<<<<<<<<<<<< 
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.z(), val)
 */
  __pyx_1 = PyFloat_FromDouble(((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_self)->pimpl->z()); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 93; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.SphereRef.z.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":94
 *         def __get__(self):
 *             return self.pimpl.z()
 *         def __set__(self, val):             # <<<<<<<<<<<<<< 
 *             __helper_set_double(self.pimpl.z(), val)
 * 
 */

static int __pyx_pf_13object_matrix_9SphereRef_1z___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pf_13object_matrix_9SphereRef_1z___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  double __pyx_1;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":95
 *             return self.pimpl.z()
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.z(), val)             # <<<<<<<<<<<<<< 
 * 
 *     property radius:
 */
  __pyx_1 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 95; __pyx_clineno = __LINE__; goto __pyx_L1;}
  pyrex_helper::ref_set<double>(((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_self)->pimpl->z(), __pyx_1);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.SphereRef.z.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":98
 * 
 *     property radius:
 *         def __get__(self):             # <<<<<<<<<<<<<< 
 *             return self.pimpl.radius()
 *         def __set__(self, val):
 */

static PyObject *__pyx_pf_13object_matrix_9SphereRef_6radius___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_9SphereRef_6radius___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":99
 *     property radius:
 *         def __get__(self):
 *             return self.pimpl.radius()             # <<<<<<<<<<<<<< 
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.radius(), val)
 */
  __pyx_1 = PyFloat_FromDouble(((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_self)->pimpl->radius()); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 99; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.SphereRef.radius.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":100
 *         def __get__(self):
 *             return self.pimpl.radius()
 *         def __set__(self, val):             # <<<<<<<<<<<<<< 
 *             __helper_set_double(self.pimpl.radius(), val)
 * 
 */

static int __pyx_pf_13object_matrix_9SphereRef_6radius___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val); /*proto*/
static int __pyx_pf_13object_matrix_9SphereRef_6radius___set__(PyObject *__pyx_v_self, PyObject *__pyx_v_val) {
  int __pyx_r;
  double __pyx_1;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":101
 *             return self.pimpl.radius()
 *         def __set__(self, val):
 *             __helper_set_double(self.pimpl.radius(), val)             # <<<<<<<<<<<<<< 
 * 
 * cdef class ObjectContainer
 */
  __pyx_1 = __pyx_PyFloat_AsDouble(__pyx_v_val); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 101; __pyx_clineno = __LINE__; goto __pyx_L1;}
  pyrex_helper::ref_set<double>(((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_self)->pimpl->radius(), __pyx_1);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.SphereRef.radius.__set__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":110
 *     cdef __impl_sphere *sphere_pimpl
 * 
 *     def __cinit__(self, ObjectContainer oc, sphere):             # <<<<<<<<<<<<<< 
 *         cdef __impl_sphere *sphere_pimpl
 *         if isinstance(sphere, Sphere):
 */

static PyObject *__pyx_n_ValueError;

static PyObject *__pyx_k_2p;

static PyObject *__pyx_builtin_ValueError;

static char __pyx_k_2[] = "unsupported argument type";

static int __pyx_pf_13object_matrix_36__ObjectContainer_iterneighbors_iter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_13object_matrix_36__ObjectContainer_iterneighbors_iter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_13object_matrix_ObjectContainer *__pyx_v_oc = 0;
  PyObject *__pyx_v_sphere = 0;
  sphere<double> *__pyx_v_sphere_pimpl;
  int __pyx_r;
  int __pyx_1;
  PyObject *__pyx_2 = 0;
  PyObject *__pyx_3 = 0;
  static char *__pyx_argnames[] = {"oc","sphere",0};
  if (likely(!__pyx_kwds) && likely(PyTuple_GET_SIZE(__pyx_args) == 2)) {
    __pyx_v_oc = ((struct __pyx_obj_13object_matrix_ObjectContainer *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_sphere = PyTuple_GET_ITEM(__pyx_args, 1);
  }
  else {
    if (unlikely(!PyArg_ParseTupleAndKeywords(__pyx_args, __pyx_kwds, "OO", __pyx_argnames, &__pyx_v_oc, &__pyx_v_sphere))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L2;}
  }
  goto __pyx_L3;
  __pyx_L2:;
  __Pyx_AddTraceback("object_matrix.__ObjectContainer_iterneighbors_iter.__cinit__");
  return -1;
  __pyx_L3:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_oc), __pyx_ptype_13object_matrix_ObjectContainer, 1, "oc"))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 110; __pyx_clineno = __LINE__; goto __pyx_L1;}

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":112
 *     def __cinit__(self, ObjectContainer oc, sphere):
 *         cdef __impl_sphere *sphere_pimpl
 *         if isinstance(sphere, Sphere):             # <<<<<<<<<<<<<< 
 *             sphere_pimpl = __impl_sphere_clone((<Sphere>sphere).pimpl)
 *         elif isinstance(sphere, SphereRef):
 */
  __pyx_1 = PyObject_IsInstance(__pyx_v_sphere, ((PyObject*)__pyx_ptype_13object_matrix_Sphere)); if (unlikely(__pyx_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 112; __pyx_clineno = __LINE__; goto __pyx_L1;}
  if (__pyx_1) {

    /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":113
 *         cdef __impl_sphere *sphere_pimpl
 *         if isinstance(sphere, Sphere):
 *             sphere_pimpl = __impl_sphere_clone((<Sphere>sphere).pimpl)             # <<<<<<<<<<<<<< 
 *         elif isinstance(sphere, SphereRef):
 *             sphere_pimpl = __impl_sphere_ref_clone((<SphereRef>sphere).pimpl)
 */
    __pyx_v_sphere_pimpl = __impl_sphere_clone(((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_sphere)->pimpl);
    goto __pyx_L4;
  }

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":114
 *         if isinstance(sphere, Sphere):
 *             sphere_pimpl = __impl_sphere_clone((<Sphere>sphere).pimpl)
 *         elif isinstance(sphere, SphereRef):             # <<<<<<<<<<<<<< 
 *             sphere_pimpl = __impl_sphere_ref_clone((<SphereRef>sphere).pimpl)
 *         else:
 */
  __pyx_1 = PyObject_IsInstance(__pyx_v_sphere, ((PyObject*)__pyx_ptype_13object_matrix_SphereRef)); if (unlikely(__pyx_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 114; __pyx_clineno = __LINE__; goto __pyx_L1;}
  if (__pyx_1) {

    /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":115
 *             sphere_pimpl = __impl_sphere_clone((<Sphere>sphere).pimpl)
 *         elif isinstance(sphere, SphereRef):
 *             sphere_pimpl = __impl_sphere_ref_clone((<SphereRef>sphere).pimpl)             # <<<<<<<<<<<<<< 
 *         else:
 *             raise ValueError("unsupported argument type")
 */
    __pyx_v_sphere_pimpl = __impl_sphere_ref_clone(((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_sphere)->pimpl);
    goto __pyx_L4;
  }
  /*else*/ {

    /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":117
 *             sphere_pimpl = __impl_sphere_ref_clone((<SphereRef>sphere).pimpl)
 *         else:
 *             raise ValueError("unsupported argument type")             # <<<<<<<<<<<<<< 
 *         self.sphere_pimpl = sphere_pimpl
 *         self.oc_pimpl = oc.pimpl
 */
    __pyx_2 = PyTuple_New(1); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1;}
    Py_INCREF(__pyx_k_2p);
    PyTuple_SET_ITEM(__pyx_2, 0, __pyx_k_2p);
    __pyx_3 = PyObject_Call(__pyx_builtin_ValueError, __pyx_2, NULL); if (unlikely(!__pyx_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1;}
    Py_DECREF(__pyx_2); __pyx_2 = 0;
    __Pyx_Raise(__pyx_3, 0, 0);
    Py_DECREF(__pyx_3); __pyx_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1;}
  }
  __pyx_L4:;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":118
 *         else:
 *             raise ValueError("unsupported argument type")
 *         self.sphere_pimpl = sphere_pimpl             # <<<<<<<<<<<<<< 
 *         self.oc_pimpl = oc.pimpl
 *         self.pimpl = NULL
 */
  ((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter *)__pyx_v_self)->sphere_pimpl = __pyx_v_sphere_pimpl;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":119
 *             raise ValueError("unsupported argument type")
 *         self.sphere_pimpl = sphere_pimpl
 *         self.oc_pimpl = oc.pimpl             # <<<<<<<<<<<<<< 
 *         self.pimpl = NULL
 * 
 */
  ((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter *)__pyx_v_self)->oc_pimpl = __pyx_v_oc->pimpl;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":120
 *         self.sphere_pimpl = sphere_pimpl
 *         self.oc_pimpl = oc.pimpl
 *         self.pimpl = NULL             # <<<<<<<<<<<<<< 
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter *)__pyx_v_self)->pimpl = NULL;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_2);
  Py_XDECREF(__pyx_3);
  __Pyx_AddTraceback("object_matrix.__ObjectContainer_iterneighbors_iter.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":122
 *         self.pimpl = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<< 
 *         __impl_object_container_iterneighbors_gen_del(self.pimpl)
 *         __impl_sphere_del(self.sphere_pimpl)
 */

static void __pyx_pf_13object_matrix_36__ObjectContainer_iterneighbors_iter___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_13object_matrix_36__ObjectContainer_iterneighbors_iter___dealloc__(PyObject *__pyx_v_self) {

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":123
 * 
 *     def __dealloc__(self):
 *         __impl_object_container_iterneighbors_gen_del(self.pimpl)             # <<<<<<<<<<<<<< 
 *         __impl_sphere_del(self.sphere_pimpl)
 * 
 */
  delete(((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter *)__pyx_v_self)->pimpl);

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":124
 *     def __dealloc__(self):
 *         __impl_object_container_iterneighbors_gen_del(self.pimpl)
 *         __impl_sphere_del(self.sphere_pimpl)             # <<<<<<<<<<<<<< 
 * 
 *     def next(self):
 */
  delete(((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter *)__pyx_v_self)->sphere_pimpl);

}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":126
 *         __impl_sphere_del(self.sphere_pimpl)
 * 
 *     def next(self):             # <<<<<<<<<<<<<< 
 *         cdef __impl_object_container_iterneighbors_gen_value *value
 *         if self.pimpl == NULL:
 */

static PyObject *__pyx_pf_13object_matrix_36__ObjectContainer_iterneighbors_iter_next(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_13object_matrix_36__ObjectContainer_iterneighbors_iter_next(PyObject *__pyx_v_self, PyObject *unused) {
  take_neighbor_collector::value_type *__pyx_v_value;
  PyObject *__pyx_v_retval;
  PyObject *__pyx_r;
  int __pyx_1;
  PyObject *__pyx_2 = 0;
  PyObject *__pyx_3 = 0;
  PyObject *__pyx_4 = 0;
  __pyx_v_retval = Py_None; Py_INCREF(Py_None);

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":128
 *     def next(self):
 *         cdef __impl_object_container_iterneighbors_gen_value *value
 *         if self.pimpl == NULL:             # <<<<<<<<<<<<<< 
 *             self.pimpl = __impl_object_container_iterneighbors(
 *                     self.oc_pimpl, self.sphere_pimpl)
 */
  __pyx_1 = (((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter *)__pyx_v_self)->pimpl == NULL);
  if (__pyx_1) {

    /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":129
 *         cdef __impl_object_container_iterneighbors_gen_value *value
 *         if self.pimpl == NULL:
 *             self.pimpl = __impl_object_container_iterneighbors(             # <<<<<<<<<<<<<< 
 *                     self.oc_pimpl, self.sphere_pimpl)
 *         value = <__impl_object_container_iterneighbors_gen_value *>self.pimpl.current()
 */
    ((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter *)__pyx_v_self)->pimpl = __impl_object_container_iterneighbors(((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter *)__pyx_v_self)->oc_pimpl, ((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter *)__pyx_v_self)->sphere_pimpl);
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":131
 *             self.pimpl = __impl_object_container_iterneighbors(
 *                     self.oc_pimpl, self.sphere_pimpl)
 *         value = <__impl_object_container_iterneighbors_gen_value *>self.pimpl.current()             # <<<<<<<<<<<<<< 
 *         if value == NULL:
 *             return None
 */
  __pyx_v_value = ((take_neighbor_collector::value_type *)((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter *)__pyx_v_self)->pimpl->operator*());

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":132
 *                     self.oc_pimpl, self.sphere_pimpl)
 *         value = <__impl_object_container_iterneighbors_gen_value *>self.pimpl.current()
 *         if value == NULL:             # <<<<<<<<<<<<<< 
 *             return None
 *         retval = (SphereRef(<int>value.first), value.second)
 */
  __pyx_1 = (__pyx_v_value == NULL);
  if (__pyx_1) {

    /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":133
 *         value = <__impl_object_container_iterneighbors_gen_value *>self.pimpl.current()
 *         if value == NULL:
 *             return None             # <<<<<<<<<<<<<< 
 *         retval = (SphereRef(<int>value.first), value.second)
 *         self.pimpl.next()
 */
    Py_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":134
 *         if value == NULL:
 *             return None
 *         retval = (SphereRef(<int>value.first), value.second)             # <<<<<<<<<<<<<< 
 *         self.pimpl.next()
 *         return retval
 */
  __pyx_2 = PyInt_FromLong(((int)__pyx_v_value->first)); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_3 = PyTuple_New(1); if (unlikely(!__pyx_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1;}
  PyTuple_SET_ITEM(__pyx_3, 0, __pyx_2);
  __pyx_2 = 0;
  __pyx_2 = PyObject_Call(((PyObject*)__pyx_ptype_13object_matrix_SphereRef), __pyx_3, NULL); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_DECREF(__pyx_3); __pyx_3 = 0;
  __pyx_3 = PyFloat_FromDouble(__pyx_v_value->second); if (unlikely(!__pyx_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_4 = PyTuple_New(2); if (unlikely(!__pyx_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 134; __pyx_clineno = __LINE__; goto __pyx_L1;}
  PyTuple_SET_ITEM(__pyx_4, 0, __pyx_2);
  PyTuple_SET_ITEM(__pyx_4, 1, __pyx_3);
  __pyx_2 = 0;
  __pyx_3 = 0;
  Py_DECREF(__pyx_v_retval);
  __pyx_v_retval = __pyx_4;
  __pyx_4 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":135
 *             return None
 *         retval = (SphereRef(<int>value.first), value.second)
 *         self.pimpl.next()             # <<<<<<<<<<<<<< 
 *         return retval
 * 
 */
  ((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter *)__pyx_v_self)->pimpl->operator++();

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":136
 *         retval = (SphereRef(<int>value.first), value.second)
 *         self.pimpl.next()
 *         return retval             # <<<<<<<<<<<<<< 
 * 
 * cdef class __ObjectContainer_iterneighbors_cyclic_iter:
 */
  Py_INCREF(__pyx_v_retval);
  __pyx_r = __pyx_v_retval;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_2);
  Py_XDECREF(__pyx_3);
  Py_XDECREF(__pyx_4);
  __Pyx_AddTraceback("object_matrix.__ObjectContainer_iterneighbors_iter.next");
  __pyx_r = NULL;
  __pyx_L0:;
  Py_DECREF(__pyx_v_retval);
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":143
 *     cdef __impl_sphere *sphere_pimpl
 * 
 *     def __cinit__(self, ObjectContainer oc, sphere):             # <<<<<<<<<<<<<< 
 *         cdef __impl_sphere *sphere_pimpl
 *         if isinstance(sphere, Sphere):
 */

static PyObject *__pyx_k_3p;

static char __pyx_k_3[] = "unsupported argument type";

static int __pyx_pf_13object_matrix_43__ObjectContainer_iterneighbors_cyclic_iter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_13object_matrix_43__ObjectContainer_iterneighbors_cyclic_iter___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_13object_matrix_ObjectContainer *__pyx_v_oc = 0;
  PyObject *__pyx_v_sphere = 0;
  sphere<double> *__pyx_v_sphere_pimpl;
  int __pyx_r;
  int __pyx_1;
  PyObject *__pyx_2 = 0;
  PyObject *__pyx_3 = 0;
  static char *__pyx_argnames[] = {"oc","sphere",0};
  if (likely(!__pyx_kwds) && likely(PyTuple_GET_SIZE(__pyx_args) == 2)) {
    __pyx_v_oc = ((struct __pyx_obj_13object_matrix_ObjectContainer *)PyTuple_GET_ITEM(__pyx_args, 0));
    __pyx_v_sphere = PyTuple_GET_ITEM(__pyx_args, 1);
  }
  else {
    if (unlikely(!PyArg_ParseTupleAndKeywords(__pyx_args, __pyx_kwds, "OO", __pyx_argnames, &__pyx_v_oc, &__pyx_v_sphere))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L2;}
  }
  goto __pyx_L3;
  __pyx_L2:;
  __Pyx_AddTraceback("object_matrix.__ObjectContainer_iterneighbors_cyclic_iter.__cinit__");
  return -1;
  __pyx_L3:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_oc), __pyx_ptype_13object_matrix_ObjectContainer, 1, "oc"))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 143; __pyx_clineno = __LINE__; goto __pyx_L1;}

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":145
 *     def __cinit__(self, ObjectContainer oc, sphere):
 *         cdef __impl_sphere *sphere_pimpl
 *         if isinstance(sphere, Sphere):             # <<<<<<<<<<<<<< 
 *             sphere_pimpl = __impl_sphere_clone((<Sphere>sphere).pimpl)
 *         elif isinstance(sphere, SphereRef):
 */
  __pyx_1 = PyObject_IsInstance(__pyx_v_sphere, ((PyObject*)__pyx_ptype_13object_matrix_Sphere)); if (unlikely(__pyx_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1;}
  if (__pyx_1) {

    /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":146
 *         cdef __impl_sphere *sphere_pimpl
 *         if isinstance(sphere, Sphere):
 *             sphere_pimpl = __impl_sphere_clone((<Sphere>sphere).pimpl)             # <<<<<<<<<<<<<< 
 *         elif isinstance(sphere, SphereRef):
 *             sphere_pimpl = __impl_sphere_ref_clone((<SphereRef>sphere).pimpl)
 */
    __pyx_v_sphere_pimpl = __impl_sphere_clone(((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_sphere)->pimpl);
    goto __pyx_L4;
  }

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":147
 *         if isinstance(sphere, Sphere):
 *             sphere_pimpl = __impl_sphere_clone((<Sphere>sphere).pimpl)
 *         elif isinstance(sphere, SphereRef):             # <<<<<<<<<<<<<< 
 *             sphere_pimpl = __impl_sphere_ref_clone((<SphereRef>sphere).pimpl)
 *         else:
 */
  __pyx_1 = PyObject_IsInstance(__pyx_v_sphere, ((PyObject*)__pyx_ptype_13object_matrix_SphereRef)); if (unlikely(__pyx_1 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1;}
  if (__pyx_1) {

    /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":148
 *             sphere_pimpl = __impl_sphere_clone((<Sphere>sphere).pimpl)
 *         elif isinstance(sphere, SphereRef):
 *             sphere_pimpl = __impl_sphere_ref_clone((<SphereRef>sphere).pimpl)             # <<<<<<<<<<<<<< 
 *         else:
 *             raise ValueError("unsupported argument type")
 */
    __pyx_v_sphere_pimpl = __impl_sphere_ref_clone(((struct __pyx_obj_13object_matrix_SphereRef *)__pyx_v_sphere)->pimpl);
    goto __pyx_L4;
  }
  /*else*/ {

    /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":150
 *             sphere_pimpl = __impl_sphere_ref_clone((<SphereRef>sphere).pimpl)
 *         else:
 *             raise ValueError("unsupported argument type")             # <<<<<<<<<<<<<< 
 *         self.sphere_pimpl = sphere_pimpl
 *         self.oc_pimpl = oc.pimpl
 */
    __pyx_2 = PyTuple_New(1); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1;}
    Py_INCREF(__pyx_k_3p);
    PyTuple_SET_ITEM(__pyx_2, 0, __pyx_k_3p);
    __pyx_3 = PyObject_Call(__pyx_builtin_ValueError, __pyx_2, NULL); if (unlikely(!__pyx_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1;}
    Py_DECREF(__pyx_2); __pyx_2 = 0;
    __Pyx_Raise(__pyx_3, 0, 0);
    Py_DECREF(__pyx_3); __pyx_3 = 0;
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 150; __pyx_clineno = __LINE__; goto __pyx_L1;}
  }
  __pyx_L4:;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":151
 *         else:
 *             raise ValueError("unsupported argument type")
 *         self.sphere_pimpl = sphere_pimpl             # <<<<<<<<<<<<<< 
 *         self.oc_pimpl = oc.pimpl
 *         self.pimpl = NULL
 */
  ((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter *)__pyx_v_self)->sphere_pimpl = __pyx_v_sphere_pimpl;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":152
 *             raise ValueError("unsupported argument type")
 *         self.sphere_pimpl = sphere_pimpl
 *         self.oc_pimpl = oc.pimpl             # <<<<<<<<<<<<<< 
 *         self.pimpl = NULL
 * 
 */
  ((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter *)__pyx_v_self)->oc_pimpl = __pyx_v_oc->pimpl;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":153
 *         self.sphere_pimpl = sphere_pimpl
 *         self.oc_pimpl = oc.pimpl
 *         self.pimpl = NULL             # <<<<<<<<<<<<<< 
 * 
 *     def __dealloc__(self):
 */
  ((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter *)__pyx_v_self)->pimpl = NULL;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_2);
  Py_XDECREF(__pyx_3);
  __Pyx_AddTraceback("object_matrix.__ObjectContainer_iterneighbors_cyclic_iter.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":155
 *         self.pimpl = NULL
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<< 
 *         __impl_object_container_iterneighbors_gen_del(self.pimpl)
 *         __impl_sphere_del(self.sphere_pimpl)
 */

static void __pyx_pf_13object_matrix_43__ObjectContainer_iterneighbors_cyclic_iter___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_13object_matrix_43__ObjectContainer_iterneighbors_cyclic_iter___dealloc__(PyObject *__pyx_v_self) {

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":156
 * 
 *     def __dealloc__(self):
 *         __impl_object_container_iterneighbors_gen_del(self.pimpl)             # <<<<<<<<<<<<<< 
 *         __impl_sphere_del(self.sphere_pimpl)
 * 
 */
  delete(((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter *)__pyx_v_self)->pimpl);

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":157
 *     def __dealloc__(self):
 *         __impl_object_container_iterneighbors_gen_del(self.pimpl)
 *         __impl_sphere_del(self.sphere_pimpl)             # <<<<<<<<<<<<<< 
 * 
 *     def next(self):
 */
  delete(((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter *)__pyx_v_self)->sphere_pimpl);

}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":159
 *         __impl_sphere_del(self.sphere_pimpl)
 * 
 *     def next(self):             # <<<<<<<<<<<<<< 
 *         cdef __impl_object_container_iterneighbors_gen_value *value
 *         if self.pimpl == NULL:
 */

static PyObject *__pyx_pf_13object_matrix_43__ObjectContainer_iterneighbors_cyclic_iter_next(PyObject *__pyx_v_self, PyObject *unused); /*proto*/
static PyObject *__pyx_pf_13object_matrix_43__ObjectContainer_iterneighbors_cyclic_iter_next(PyObject *__pyx_v_self, PyObject *unused) {
  take_neighbor_collector::value_type *__pyx_v_value;
  PyObject *__pyx_v_retval;
  PyObject *__pyx_r;
  int __pyx_1;
  PyObject *__pyx_2 = 0;
  PyObject *__pyx_3 = 0;
  PyObject *__pyx_4 = 0;
  __pyx_v_retval = Py_None; Py_INCREF(Py_None);

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":161
 *     def next(self):
 *         cdef __impl_object_container_iterneighbors_gen_value *value
 *         if self.pimpl == NULL:             # <<<<<<<<<<<<<< 
 *             self.pimpl = __impl_object_container_iterneighbors_cyclic(
 *                     self.oc_pimpl, self.sphere_pimpl)
 */
  __pyx_1 = (((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter *)__pyx_v_self)->pimpl == NULL);
  if (__pyx_1) {

    /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":162
 *         cdef __impl_object_container_iterneighbors_gen_value *value
 *         if self.pimpl == NULL:
 *             self.pimpl = __impl_object_container_iterneighbors_cyclic(             # <<<<<<<<<<<<<< 
 *                     self.oc_pimpl, self.sphere_pimpl)
 *         value = <__impl_object_container_iterneighbors_gen_value *>self.pimpl.current()
 */
    ((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter *)__pyx_v_self)->pimpl = __impl_object_container_iterneighbors_cyclic(((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter *)__pyx_v_self)->oc_pimpl, ((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter *)__pyx_v_self)->sphere_pimpl);
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":164
 *             self.pimpl = __impl_object_container_iterneighbors_cyclic(
 *                     self.oc_pimpl, self.sphere_pimpl)
 *         value = <__impl_object_container_iterneighbors_gen_value *>self.pimpl.current()             # <<<<<<<<<<<<<< 
 *         if value == NULL:
 *             return None
 */
  __pyx_v_value = ((take_neighbor_collector::value_type *)((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter *)__pyx_v_self)->pimpl->operator*());

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":165
 *                     self.oc_pimpl, self.sphere_pimpl)
 *         value = <__impl_object_container_iterneighbors_gen_value *>self.pimpl.current()
 *         if value == NULL:             # <<<<<<<<<<<<<< 
 *             return None
 *         retval = (SphereRef(<int>value.first), value.second)
 */
  __pyx_1 = (__pyx_v_value == NULL);
  if (__pyx_1) {

    /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":166
 *         value = <__impl_object_container_iterneighbors_gen_value *>self.pimpl.current()
 *         if value == NULL:
 *             return None             # <<<<<<<<<<<<<< 
 *         retval = (SphereRef(<int>value.first), value.second)
 *         self.pimpl.next()
 */
    Py_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":167
 *         if value == NULL:
 *             return None
 *         retval = (SphereRef(<int>value.first), value.second)             # <<<<<<<<<<<<<< 
 *         self.pimpl.next()
 *         return retval
 */
  __pyx_2 = PyInt_FromLong(((int)__pyx_v_value->first)); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_3 = PyTuple_New(1); if (unlikely(!__pyx_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1;}
  PyTuple_SET_ITEM(__pyx_3, 0, __pyx_2);
  __pyx_2 = 0;
  __pyx_2 = PyObject_Call(((PyObject*)__pyx_ptype_13object_matrix_SphereRef), __pyx_3, NULL); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_DECREF(__pyx_3); __pyx_3 = 0;
  __pyx_3 = PyFloat_FromDouble(__pyx_v_value->second); if (unlikely(!__pyx_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_4 = PyTuple_New(2); if (unlikely(!__pyx_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1;}
  PyTuple_SET_ITEM(__pyx_4, 0, __pyx_2);
  PyTuple_SET_ITEM(__pyx_4, 1, __pyx_3);
  __pyx_2 = 0;
  __pyx_3 = 0;
  Py_DECREF(__pyx_v_retval);
  __pyx_v_retval = __pyx_4;
  __pyx_4 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":168
 *             return None
 *         retval = (SphereRef(<int>value.first), value.second)
 *         self.pimpl.next()             # <<<<<<<<<<<<<< 
 *         return retval
 * 
 */
  ((struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter *)__pyx_v_self)->pimpl->operator++();

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":169
 *         retval = (SphereRef(<int>value.first), value.second)
 *         self.pimpl.next()
 *         return retval             # <<<<<<<<<<<<<< 
 * 
 * cdef class ObjectContainer:
 */
  Py_INCREF(__pyx_v_retval);
  __pyx_r = __pyx_v_retval;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_2);
  Py_XDECREF(__pyx_3);
  Py_XDECREF(__pyx_4);
  __Pyx_AddTraceback("object_matrix.__ObjectContainer_iterneighbors_cyclic_iter.next");
  __pyx_r = NULL;
  __pyx_L0:;
  Py_DECREF(__pyx_v_retval);
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":174
 *     cdef __impl_object_container *pimpl
 * 
 *     def __cinit__(self, world_size = 1.0, cells_per_side = 1):             # <<<<<<<<<<<<<< 
 *         self.pimpl = __impl_object_container_new(world_size, cells_per_side)
 * 
 */

static int __pyx_pf_13object_matrix_15ObjectContainer___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pf_13object_matrix_15ObjectContainer___cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_world_size = 0;
  PyObject *__pyx_v_cells_per_side = 0;
  int __pyx_r;
  double __pyx_1;
  int __pyx_2;
  static char *__pyx_argnames[] = {"world_size","cells_per_side",0};
  __pyx_v_world_size = __pyx_k_1;
  __pyx_v_cells_per_side = __pyx_int_1;
  if (likely(!__pyx_kwds) && likely(0 <= PyTuple_GET_SIZE(__pyx_args)) && likely(PyTuple_GET_SIZE(__pyx_args) <= 2)) {
    if (PyTuple_GET_SIZE(__pyx_args) > 0) {
      __pyx_v_world_size = PyTuple_GET_ITEM(__pyx_args, 0);
      if (PyTuple_GET_SIZE(__pyx_args) > 1) {
        __pyx_v_cells_per_side = PyTuple_GET_ITEM(__pyx_args, 1);
      }
    }
  }
  else {
    if (unlikely(!PyArg_ParseTupleAndKeywords(__pyx_args, __pyx_kwds, "|OO", __pyx_argnames, &__pyx_v_world_size, &__pyx_v_cells_per_side))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L2;}
  }
  goto __pyx_L3;
  __pyx_L2:;
  __Pyx_AddTraceback("object_matrix.ObjectContainer.__cinit__");
  return -1;
  __pyx_L3:;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":175
 * 
 *     def __cinit__(self, world_size = 1.0, cells_per_side = 1):
 *         self.pimpl = __impl_object_container_new(world_size, cells_per_side)             # <<<<<<<<<<<<<< 
 * 
 *     def __dealloc__(self):
 */
  __pyx_1 = __pyx_PyFloat_AsDouble(__pyx_v_world_size); if (unlikely(PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_2 = __pyx_PyInt_int(__pyx_v_cells_per_side); if (unlikely((__pyx_2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1;}
  ((struct __pyx_obj_13object_matrix_ObjectContainer *)__pyx_v_self)->pimpl = new my_object_container_type(__pyx_1, __pyx_2);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.ObjectContainer.__cinit__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":177
 *         self.pimpl = __impl_object_container_new(world_size, cells_per_side)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<< 
 *         __impl_object_container_del(self.pimpl)
 * 
 */

static void __pyx_pf_13object_matrix_15ObjectContainer___dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pf_13object_matrix_15ObjectContainer___dealloc__(PyObject *__pyx_v_self) {

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":178
 * 
 *     def __dealloc__(self):
 *         __impl_object_container_del(self.pimpl)             # <<<<<<<<<<<<<< 
 * 
 *     def __getitem__(self, key):
 */
  delete(((struct __pyx_obj_13object_matrix_ObjectContainer *)__pyx_v_self)->pimpl);

}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":180
 *         __impl_object_container_del(self.pimpl)
 * 
 *     def __getitem__(self, key):             # <<<<<<<<<<<<<< 
 *         s = <int>__impl_object_container_find(self.pimpl, key)
 *         if s == 0:
 */

static PyObject *__pyx_int_0;

static PyObject *__pyx_pf_13object_matrix_15ObjectContainer___getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key); /*proto*/
static PyObject *__pyx_pf_13object_matrix_15ObjectContainer___getitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key) {
  PyObject *__pyx_v_s;
  PyObject *__pyx_r;
  int __pyx_1;
  PyObject *__pyx_2 = 0;
  int __pyx_3;
  PyObject *__pyx_4 = 0;
  __pyx_v_s = Py_None; Py_INCREF(Py_None);

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":181
 * 
 *     def __getitem__(self, key):
 *         s = <int>__impl_object_container_find(self.pimpl, key)             # <<<<<<<<<<<<<< 
 *         if s == 0:
 *             return None
 */
  __pyx_1 = __pyx_PyInt_int(__pyx_v_key); if (unlikely((__pyx_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_2 = PyInt_FromLong(((int)__impl_object_container_find(((struct __pyx_obj_13object_matrix_ObjectContainer *)__pyx_v_self)->pimpl, __pyx_1))); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 181; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_DECREF(__pyx_v_s);
  __pyx_v_s = __pyx_2;
  __pyx_2 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":182
 *     def __getitem__(self, key):
 *         s = <int>__impl_object_container_find(self.pimpl, key)
 *         if s == 0:             # <<<<<<<<<<<<<< 
 *             return None
 *         return SphereRef(s)
 */
  __pyx_2 = PyObject_RichCompare(__pyx_v_s, __pyx_int_0, Py_EQ); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_3 = __Pyx_PyObject_IsTrue(__pyx_2); if (unlikely(__pyx_3 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 182; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_DECREF(__pyx_2); __pyx_2 = 0;
  if (__pyx_3) {

    /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":183
 *         s = <int>__impl_object_container_find(self.pimpl, key)
 *         if s == 0:
 *             return None             # <<<<<<<<<<<<<< 
 *         return SphereRef(s)
 * 
 */
    Py_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    goto __pyx_L4;
  }
  __pyx_L4:;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":184
 *         if s == 0:
 *             return None
 *         return SphereRef(s)             # <<<<<<<<<<<<<< 
 * 
 *     def __setitem__(self, key, Sphere sphere):
 */
  __pyx_2 = PyTuple_New(1); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_INCREF(__pyx_v_s);
  PyTuple_SET_ITEM(__pyx_2, 0, __pyx_v_s);
  __pyx_4 = PyObject_Call(((PyObject*)__pyx_ptype_13object_matrix_SphereRef), __pyx_2, NULL); if (unlikely(!__pyx_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 184; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_DECREF(__pyx_2); __pyx_2 = 0;
  __pyx_r = __pyx_4;
  __pyx_4 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_2);
  Py_XDECREF(__pyx_4);
  __Pyx_AddTraceback("object_matrix.ObjectContainer.__getitem__");
  __pyx_r = NULL;
  __pyx_L0:;
  Py_DECREF(__pyx_v_s);
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":186
 *         return SphereRef(s)
 * 
 *     def __setitem__(self, key, Sphere sphere):             # <<<<<<<<<<<<<< 
 *         __impl_object_container_insert(self.pimpl, key, sphere.pimpl)
 * 
 */

static int __pyx_pf_13object_matrix_15ObjectContainer___setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_sphere); /*proto*/
static int __pyx_pf_13object_matrix_15ObjectContainer___setitem__(PyObject *__pyx_v_self, PyObject *__pyx_v_key, PyObject *__pyx_v_sphere) {
  int __pyx_r;
  int __pyx_1;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_sphere), __pyx_ptype_13object_matrix_Sphere, 1, "sphere"))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1;}

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":187
 * 
 *     def __setitem__(self, key, Sphere sphere):
 *         __impl_object_container_insert(self.pimpl, key, sphere.pimpl)             # <<<<<<<<<<<<<< 
 * 
 *     def __len__(self):
 */
  __pyx_1 = __pyx_PyInt_int(__pyx_v_key); if (unlikely((__pyx_1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 187; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __impl_object_container_insert(((struct __pyx_obj_13object_matrix_ObjectContainer *)__pyx_v_self)->pimpl, __pyx_1, ((struct __pyx_obj_13object_matrix_Sphere *)__pyx_v_sphere)->pimpl);

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1:;
  __Pyx_AddTraceback("object_matrix.ObjectContainer.__setitem__");
  __pyx_r = -1;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":189
 *         __impl_object_container_insert(self.pimpl, key, sphere.pimpl)
 * 
 *     def __len__(self):             # <<<<<<<<<<<<<< 
 *         return self.pimpl.size()
 * 
 */

static Py_ssize_t __pyx_pf_13object_matrix_15ObjectContainer___len__(PyObject *__pyx_v_self); /*proto*/
static Py_ssize_t __pyx_pf_13object_matrix_15ObjectContainer___len__(PyObject *__pyx_v_self) {
  Py_ssize_t __pyx_r;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":190
 * 
 *     def __len__(self):
 *         return self.pimpl.size()             # <<<<<<<<<<<<<< 
 * 
 * 
 */
  __pyx_r = ((struct __pyx_obj_13object_matrix_ObjectContainer *)__pyx_v_self)->pimpl->size();
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":193
 * 
 * 
 *     def iterneighbors(self, sphere):             # <<<<<<<<<<<<<< 
 *         return PyCallIter_New(__ObjectContainer_iterneighbors_iter(
 *                 self, sphere).next, None)
 */

static PyObject *__pyx_pf_13object_matrix_15ObjectContainer_iterneighbors(PyObject *__pyx_v_self, PyObject *__pyx_v_sphere); /*proto*/
static PyObject *__pyx_pf_13object_matrix_15ObjectContainer_iterneighbors(PyObject *__pyx_v_self, PyObject *__pyx_v_sphere) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;
  PyObject *__pyx_2 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":195
 *     def iterneighbors(self, sphere):
 *         return PyCallIter_New(__ObjectContainer_iterneighbors_iter(
 *                 self, sphere).next, None)             # <<<<<<<<<<<<<< 
 * 
 *     def iterneighbors_cyclic(self, sphere):
 */
  __pyx_1 = PyTuple_New(2); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_INCREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_1, 0, __pyx_v_self);
  Py_INCREF(__pyx_v_sphere);
  PyTuple_SET_ITEM(__pyx_1, 1, __pyx_v_sphere);
  __pyx_2 = PyObject_Call(((PyObject*)__pyx_ptype_13object_matrix___ObjectContainer_iterneighbors_iter), __pyx_1, NULL); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_1 = PyObject_GetAttr(__pyx_2, __pyx_n_next); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 195; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_DECREF(__pyx_2); __pyx_2 = 0;
  __pyx_2 = PyCallIter_New(__pyx_1, Py_None); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_r = __pyx_2;
  __pyx_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  Py_XDECREF(__pyx_2);
  __Pyx_AddTraceback("object_matrix.ObjectContainer.iterneighbors");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":197
 *                 self, sphere).next, None)
 * 
 *     def iterneighbors_cyclic(self, sphere):             # <<<<<<<<<<<<<< 
 *         return PyCallIter_New(__ObjectContainer_iterneighbors_cyclic_iter(
 *                 self, sphere).next, None)
 */

static PyObject *__pyx_pf_13object_matrix_15ObjectContainer_iterneighbors_cyclic(PyObject *__pyx_v_self, PyObject *__pyx_v_sphere); /*proto*/
static PyObject *__pyx_pf_13object_matrix_15ObjectContainer_iterneighbors_cyclic(PyObject *__pyx_v_self, PyObject *__pyx_v_sphere) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;
  PyObject *__pyx_2 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":199
 *     def iterneighbors_cyclic(self, sphere):
 *         return PyCallIter_New(__ObjectContainer_iterneighbors_cyclic_iter(
 *                 self, sphere).next, None)             # <<<<<<<<<<<<<< 
 * 
 *     property matrix_size:
 */
  __pyx_1 = PyTuple_New(2); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_INCREF(__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_1, 0, __pyx_v_self);
  Py_INCREF(__pyx_v_sphere);
  PyTuple_SET_ITEM(__pyx_1, 1, __pyx_v_sphere);
  __pyx_2 = PyObject_Call(((PyObject*)__pyx_ptype_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter), __pyx_1, NULL); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_1 = PyObject_GetAttr(__pyx_2, __pyx_n_next); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_DECREF(__pyx_2); __pyx_2 = 0;
  __pyx_2 = PyCallIter_New(__pyx_1, Py_None); if (unlikely(!__pyx_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1;}
  Py_DECREF(__pyx_1); __pyx_1 = 0;
  __pyx_r = __pyx_2;
  __pyx_2 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  Py_XDECREF(__pyx_2);
  __Pyx_AddTraceback("object_matrix.ObjectContainer.iterneighbors_cyclic");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":202
 * 
 *     property matrix_size:
 *         def __get__(self): return self.pimpl.matrix_size()             # <<<<<<<<<<<<<< 
 * 
 *     property cell_size:
 */

static PyObject *__pyx_pf_13object_matrix_15ObjectContainer_11matrix_size___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_15ObjectContainer_11matrix_size___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;
  __pyx_1 = PyInt_FromLong(((struct __pyx_obj_13object_matrix_ObjectContainer *)__pyx_v_self)->pimpl->matrix_size()); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.ObjectContainer.matrix_size.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

/* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":205
 * 
 *     property cell_size:
 *         def __get__(self): return self.pimpl.cell_size()             # <<<<<<<<<<<<<< 
 * 
 */

static PyObject *__pyx_pf_13object_matrix_15ObjectContainer_9cell_size___get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pf_13object_matrix_15ObjectContainer_9cell_size___get__(PyObject *__pyx_v_self) {
  PyObject *__pyx_r;
  PyObject *__pyx_1 = 0;
  __pyx_1 = PyFloat_FromDouble(((struct __pyx_obj_13object_matrix_ObjectContainer *)__pyx_v_self)->pimpl->cell_size()); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_r = __pyx_1;
  __pyx_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; Py_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix.ObjectContainer.cell_size.__get__");
  __pyx_r = NULL;
  __pyx_L0:;
  return __pyx_r;
}

static __Pyx_InternTabEntry __pyx_intern_tab[] = {
  {&__pyx_n_ValueError, "ValueError"},
  {&__pyx_n___cinit__, "__cinit__"},
  {&__pyx_n___dealloc__, "__dealloc__"},
  {&__pyx_n___getitem__, "__getitem__"},
  {&__pyx_n___len__, "__len__"},
  {&__pyx_n___repr__, "__repr__"},
  {&__pyx_n___setitem__, "__setitem__"},
  {&__pyx_n_iterneighbors, "iterneighbors"},
  {&__pyx_n_iterneighbors_cyclic, "iterneighbors_cyclic"},
  {&__pyx_n_next, "next"},
  {0, 0}
};

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_k_2p, __pyx_k_2, sizeof(__pyx_k_2), 0},
  {&__pyx_k_3p, __pyx_k_3, sizeof(__pyx_k_3), 0},
  {0, 0, 0, 0}
};

static PyObject *__pyx_tp_new_13object_matrix_Position(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_13object_matrix_8Position___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_13object_matrix_Position(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++o->ob_refcnt;
    __pyx_pf_13object_matrix_8Position___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --o->ob_refcnt;
    PyErr_Restore(etype, eval, etb);
  }
  (*o->ob_type->tp_free)(o);
}

static PyObject *__pyx_getprop_13object_matrix_8Position_x(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_8Position_1x___get__(o);
}

static int __pyx_setprop_13object_matrix_8Position_x(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_13object_matrix_8Position_1x___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_13object_matrix_8Position_y(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_8Position_1y___get__(o);
}

static int __pyx_setprop_13object_matrix_8Position_y(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_13object_matrix_8Position_1y___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_13object_matrix_8Position_z(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_8Position_1z___get__(o);
}

static int __pyx_setprop_13object_matrix_8Position_z(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_13object_matrix_8Position_1z___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static struct PyMethodDef __pyx_methods_13object_matrix_Position[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_13object_matrix_Position[] = {
  {"x", __pyx_getprop_13object_matrix_8Position_x, __pyx_setprop_13object_matrix_8Position_x, 0, 0},
  {"y", __pyx_getprop_13object_matrix_8Position_y, __pyx_setprop_13object_matrix_8Position_y, 0, 0},
  {"z", __pyx_getprop_13object_matrix_8Position_z, __pyx_setprop_13object_matrix_8Position_z, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Position = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  0, /*nb_divide*/
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  0, /*nb_coerce*/
  0, /*nb_int*/
  0, /*nb_long*/
  0, /*nb_float*/
  0, /*nb_oct*/
  0, /*nb_hex*/
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  0, /*nb_inplace_divide*/
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Position = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Position = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Position = {
  0, /*bf_getreadbuffer*/
  0, /*bf_getwritebuffer*/
  0, /*bf_getsegcount*/
  0, /*bf_getcharbuffer*/
};

PyTypeObject __pyx_type_13object_matrix_Position = {
  PyObject_HEAD_INIT(0)
  0, /*ob_size*/
  "object_matrix.Position", /*tp_name*/
  sizeof(struct __pyx_obj_13object_matrix_Position), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_13object_matrix_Position, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_compare*/
  0, /*tp_repr*/
  &__pyx_tp_as_number_Position, /*tp_as_number*/
  &__pyx_tp_as_sequence_Position, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Position, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Position, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_13object_matrix_Position, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_13object_matrix_Position, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_13object_matrix_Position, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
};

static PyObject *__pyx_tp_new_13object_matrix_Sphere(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_13object_matrix_6Sphere___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_13object_matrix_Sphere(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++o->ob_refcnt;
    __pyx_pf_13object_matrix_6Sphere___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --o->ob_refcnt;
    PyErr_Restore(etype, eval, etb);
  }
  (*o->ob_type->tp_free)(o);
}

static PyObject *__pyx_getprop_13object_matrix_6Sphere_x(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_6Sphere_1x___get__(o);
}

static int __pyx_setprop_13object_matrix_6Sphere_x(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_13object_matrix_6Sphere_1x___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_13object_matrix_6Sphere_y(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_6Sphere_1y___get__(o);
}

static int __pyx_setprop_13object_matrix_6Sphere_y(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_13object_matrix_6Sphere_1y___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_13object_matrix_6Sphere_z(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_6Sphere_1z___get__(o);
}

static int __pyx_setprop_13object_matrix_6Sphere_z(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_13object_matrix_6Sphere_1z___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_13object_matrix_6Sphere_radius(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_6Sphere_6radius___get__(o);
}

static int __pyx_setprop_13object_matrix_6Sphere_radius(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_13object_matrix_6Sphere_6radius___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static struct PyMethodDef __pyx_methods_13object_matrix_Sphere[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_13object_matrix_Sphere[] = {
  {"x", __pyx_getprop_13object_matrix_6Sphere_x, __pyx_setprop_13object_matrix_6Sphere_x, 0, 0},
  {"y", __pyx_getprop_13object_matrix_6Sphere_y, __pyx_setprop_13object_matrix_6Sphere_y, 0, 0},
  {"z", __pyx_getprop_13object_matrix_6Sphere_z, __pyx_setprop_13object_matrix_6Sphere_z, 0, 0},
  {"radius", __pyx_getprop_13object_matrix_6Sphere_radius, __pyx_setprop_13object_matrix_6Sphere_radius, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_Sphere = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  0, /*nb_divide*/
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  0, /*nb_coerce*/
  0, /*nb_int*/
  0, /*nb_long*/
  0, /*nb_float*/
  0, /*nb_oct*/
  0, /*nb_hex*/
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  0, /*nb_inplace_divide*/
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_Sphere = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_Sphere = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_Sphere = {
  0, /*bf_getreadbuffer*/
  0, /*bf_getwritebuffer*/
  0, /*bf_getsegcount*/
  0, /*bf_getcharbuffer*/
};

PyTypeObject __pyx_type_13object_matrix_Sphere = {
  PyObject_HEAD_INIT(0)
  0, /*ob_size*/
  "object_matrix.Sphere", /*tp_name*/
  sizeof(struct __pyx_obj_13object_matrix_Sphere), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_13object_matrix_Sphere, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_compare*/
  0, /*tp_repr*/
  &__pyx_tp_as_number_Sphere, /*tp_as_number*/
  &__pyx_tp_as_sequence_Sphere, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_Sphere, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_Sphere, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_13object_matrix_Sphere, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_13object_matrix_Sphere, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_13object_matrix_Sphere, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
};

static PyObject *__pyx_tp_new_13object_matrix_SphereRef(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_13object_matrix_9SphereRef___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_13object_matrix_SphereRef(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++o->ob_refcnt;
    __pyx_pf_13object_matrix_9SphereRef___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --o->ob_refcnt;
    PyErr_Restore(etype, eval, etb);
  }
  (*o->ob_type->tp_free)(o);
}

static PyObject *__pyx_getprop_13object_matrix_9SphereRef_x(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_9SphereRef_1x___get__(o);
}

static int __pyx_setprop_13object_matrix_9SphereRef_x(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_13object_matrix_9SphereRef_1x___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_13object_matrix_9SphereRef_y(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_9SphereRef_1y___get__(o);
}

static int __pyx_setprop_13object_matrix_9SphereRef_y(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_13object_matrix_9SphereRef_1y___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_13object_matrix_9SphereRef_z(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_9SphereRef_1z___get__(o);
}

static int __pyx_setprop_13object_matrix_9SphereRef_z(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_13object_matrix_9SphereRef_1z___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_13object_matrix_9SphereRef_radius(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_9SphereRef_6radius___get__(o);
}

static int __pyx_setprop_13object_matrix_9SphereRef_radius(PyObject *o, PyObject *v, void *x) {
  if (v) {
    return __pyx_pf_13object_matrix_9SphereRef_6radius___set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static struct PyMethodDef __pyx_methods_13object_matrix_SphereRef[] = {
  {"__repr__", (PyCFunction)__pyx_pf_13object_matrix_9SphereRef___repr__, METH_NOARGS|METH_COEXIST, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_13object_matrix_SphereRef[] = {
  {"x", __pyx_getprop_13object_matrix_9SphereRef_x, __pyx_setprop_13object_matrix_9SphereRef_x, 0, 0},
  {"y", __pyx_getprop_13object_matrix_9SphereRef_y, __pyx_setprop_13object_matrix_9SphereRef_y, 0, 0},
  {"z", __pyx_getprop_13object_matrix_9SphereRef_z, __pyx_setprop_13object_matrix_9SphereRef_z, 0, 0},
  {"radius", __pyx_getprop_13object_matrix_9SphereRef_radius, __pyx_setprop_13object_matrix_9SphereRef_radius, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_SphereRef = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  0, /*nb_divide*/
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  0, /*nb_coerce*/
  0, /*nb_int*/
  0, /*nb_long*/
  0, /*nb_float*/
  0, /*nb_oct*/
  0, /*nb_hex*/
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  0, /*nb_inplace_divide*/
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_SphereRef = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_SphereRef = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_SphereRef = {
  0, /*bf_getreadbuffer*/
  0, /*bf_getwritebuffer*/
  0, /*bf_getsegcount*/
  0, /*bf_getcharbuffer*/
};

PyTypeObject __pyx_type_13object_matrix_SphereRef = {
  PyObject_HEAD_INIT(0)
  0, /*ob_size*/
  "object_matrix.SphereRef", /*tp_name*/
  sizeof(struct __pyx_obj_13object_matrix_SphereRef), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_13object_matrix_SphereRef, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_compare*/
  __pyx_pf_13object_matrix_9SphereRef___repr__, /*tp_repr*/
  &__pyx_tp_as_number_SphereRef, /*tp_as_number*/
  &__pyx_tp_as_sequence_SphereRef, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_SphereRef, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_SphereRef, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_13object_matrix_SphereRef, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_13object_matrix_SphereRef, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_13object_matrix_SphereRef, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
};

static PyObject *__pyx_tp_new_13object_matrix_ObjectContainer(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_13object_matrix_15ObjectContainer___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_13object_matrix_ObjectContainer(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++o->ob_refcnt;
    __pyx_pf_13object_matrix_15ObjectContainer___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --o->ob_refcnt;
    PyErr_Restore(etype, eval, etb);
  }
  (*o->ob_type->tp_free)(o);
}
static PyObject *__pyx_sq_item_13object_matrix_ObjectContainer(PyObject *o, Py_ssize_t i) {
  PyObject *r;
  PyObject *x = PyInt_FromSsize_t(i); if(!x) return 0;
  r = o->ob_type->tp_as_mapping->mp_subscript(o, x);
  Py_DECREF(x);
  return r;
}

static int __pyx_mp_ass_subscript_13object_matrix_ObjectContainer(PyObject *o, PyObject *i, PyObject *v) {
  if (v) {
    return __pyx_pf_13object_matrix_15ObjectContainer___setitem__(o, i, v);
  }
  else {
    PyErr_Format(PyExc_NotImplementedError,
      "Subscript deletion not supported by %s", o->ob_type->tp_name);
    return -1;
  }
}

static PyObject *__pyx_getprop_13object_matrix_15ObjectContainer_matrix_size(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_15ObjectContainer_11matrix_size___get__(o);
}

static PyObject *__pyx_getprop_13object_matrix_15ObjectContainer_cell_size(PyObject *o, void *x) {
  return __pyx_pf_13object_matrix_15ObjectContainer_9cell_size___get__(o);
}

static struct PyMethodDef __pyx_methods_13object_matrix_ObjectContainer[] = {
  {"__getitem__", (PyCFunction)__pyx_pf_13object_matrix_15ObjectContainer___getitem__, METH_O|METH_COEXIST, 0},
  {"iterneighbors", (PyCFunction)__pyx_pf_13object_matrix_15ObjectContainer_iterneighbors, METH_O, 0},
  {"iterneighbors_cyclic", (PyCFunction)__pyx_pf_13object_matrix_15ObjectContainer_iterneighbors_cyclic, METH_O, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_13object_matrix_ObjectContainer[] = {
  {"matrix_size", __pyx_getprop_13object_matrix_15ObjectContainer_matrix_size, 0, 0, 0},
  {"cell_size", __pyx_getprop_13object_matrix_15ObjectContainer_cell_size, 0, 0, 0},
  {0, 0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_ObjectContainer = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  0, /*nb_divide*/
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  0, /*nb_coerce*/
  0, /*nb_int*/
  0, /*nb_long*/
  0, /*nb_float*/
  0, /*nb_oct*/
  0, /*nb_hex*/
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  0, /*nb_inplace_divide*/
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_ObjectContainer = {
  __pyx_pf_13object_matrix_15ObjectContainer___len__, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  __pyx_sq_item_13object_matrix_ObjectContainer, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_ObjectContainer = {
  __pyx_pf_13object_matrix_15ObjectContainer___len__, /*mp_length*/
  __pyx_pf_13object_matrix_15ObjectContainer___getitem__, /*mp_subscript*/
  __pyx_mp_ass_subscript_13object_matrix_ObjectContainer, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_ObjectContainer = {
  0, /*bf_getreadbuffer*/
  0, /*bf_getwritebuffer*/
  0, /*bf_getsegcount*/
  0, /*bf_getcharbuffer*/
};

PyTypeObject __pyx_type_13object_matrix_ObjectContainer = {
  PyObject_HEAD_INIT(0)
  0, /*ob_size*/
  "object_matrix.ObjectContainer", /*tp_name*/
  sizeof(struct __pyx_obj_13object_matrix_ObjectContainer), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_13object_matrix_ObjectContainer, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_compare*/
  0, /*tp_repr*/
  &__pyx_tp_as_number_ObjectContainer, /*tp_as_number*/
  &__pyx_tp_as_sequence_ObjectContainer, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_ObjectContainer, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_ObjectContainer, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_13object_matrix_ObjectContainer, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_13object_matrix_ObjectContainer, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_13object_matrix_ObjectContainer, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
};

static PyObject *__pyx_tp_new_13object_matrix___ObjectContainer_iterneighbors_iter(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_13object_matrix_36__ObjectContainer_iterneighbors_iter___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_13object_matrix___ObjectContainer_iterneighbors_iter(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++o->ob_refcnt;
    __pyx_pf_13object_matrix_36__ObjectContainer_iterneighbors_iter___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --o->ob_refcnt;
    PyErr_Restore(etype, eval, etb);
  }
  (*o->ob_type->tp_free)(o);
}

static struct PyMethodDef __pyx_methods_13object_matrix___ObjectContainer_iterneighbors_iter[] = {
  {"next", (PyCFunction)__pyx_pf_13object_matrix_36__ObjectContainer_iterneighbors_iter_next, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number___ObjectContainer_iterneighbors_iter = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  0, /*nb_divide*/
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  0, /*nb_coerce*/
  0, /*nb_int*/
  0, /*nb_long*/
  0, /*nb_float*/
  0, /*nb_oct*/
  0, /*nb_hex*/
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  0, /*nb_inplace_divide*/
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence___ObjectContainer_iterneighbors_iter = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping___ObjectContainer_iterneighbors_iter = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer___ObjectContainer_iterneighbors_iter = {
  0, /*bf_getreadbuffer*/
  0, /*bf_getwritebuffer*/
  0, /*bf_getsegcount*/
  0, /*bf_getcharbuffer*/
};

PyTypeObject __pyx_type_13object_matrix___ObjectContainer_iterneighbors_iter = {
  PyObject_HEAD_INIT(0)
  0, /*ob_size*/
  "object_matrix.__ObjectContainer_iterneighbors_iter", /*tp_name*/
  sizeof(struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_iter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_13object_matrix___ObjectContainer_iterneighbors_iter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_compare*/
  0, /*tp_repr*/
  &__pyx_tp_as_number___ObjectContainer_iterneighbors_iter, /*tp_as_number*/
  &__pyx_tp_as_sequence___ObjectContainer_iterneighbors_iter, /*tp_as_sequence*/
  &__pyx_tp_as_mapping___ObjectContainer_iterneighbors_iter, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer___ObjectContainer_iterneighbors_iter, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_13object_matrix___ObjectContainer_iterneighbors_iter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_13object_matrix___ObjectContainer_iterneighbors_iter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
};

static PyObject *__pyx_tp_new_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  if (__pyx_pf_13object_matrix_43__ObjectContainer_iterneighbors_cyclic_iter___cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter(PyObject *o) {
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++o->ob_refcnt;
    __pyx_pf_13object_matrix_43__ObjectContainer_iterneighbors_cyclic_iter___dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --o->ob_refcnt;
    PyErr_Restore(etype, eval, etb);
  }
  (*o->ob_type->tp_free)(o);
}

static struct PyMethodDef __pyx_methods_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter[] = {
  {"next", (PyCFunction)__pyx_pf_13object_matrix_43__ObjectContainer_iterneighbors_cyclic_iter_next, METH_NOARGS, 0},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number___ObjectContainer_iterneighbors_cyclic_iter = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  0, /*nb_divide*/
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  0, /*nb_coerce*/
  0, /*nb_int*/
  0, /*nb_long*/
  0, /*nb_float*/
  0, /*nb_oct*/
  0, /*nb_hex*/
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  0, /*nb_inplace_divide*/
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if Py_TPFLAGS_DEFAULT & Py_TPFLAGS_HAVE_INDEX
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence___ObjectContainer_iterneighbors_cyclic_iter = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping___ObjectContainer_iterneighbors_cyclic_iter = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer___ObjectContainer_iterneighbors_cyclic_iter = {
  0, /*bf_getreadbuffer*/
  0, /*bf_getwritebuffer*/
  0, /*bf_getsegcount*/
  0, /*bf_getcharbuffer*/
};

PyTypeObject __pyx_type_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter = {
  PyObject_HEAD_INIT(0)
  0, /*ob_size*/
  "object_matrix.__ObjectContainer_iterneighbors_cyclic_iter", /*tp_name*/
  sizeof(struct __pyx_obj_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  0, /*tp_compare*/
  0, /*tp_repr*/
  &__pyx_tp_as_number___ObjectContainer_iterneighbors_cyclic_iter, /*tp_as_number*/
  &__pyx_tp_as_sequence___ObjectContainer_iterneighbors_cyclic_iter, /*tp_as_sequence*/
  &__pyx_tp_as_mapping___ObjectContainer_iterneighbors_cyclic_iter, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer___ObjectContainer_iterneighbors_cyclic_iter, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  0, /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
};

static struct PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

static void __pyx_init_filenames(void); /*proto*/

PyMODINIT_FUNC init2object_matrix(void);

PyMODINIT_FUNC initobject_matrix(void); /*proto*/
PyMODINIT_FUNC initobject_matrix(void) {
  PyObject *__pyx_1 = 0;
  /*--- Libary function declarations ---*/
  __pyx_init_filenames();
  /*--- Module creation code ---*/
  __pyx_m = Py_InitModule4("object_matrix", __pyx_methods, 0, 0, PYTHON_API_VERSION);
  if (!__pyx_m) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1;};
  __pyx_b = PyImport_AddModule("__builtin__");
  if (!__pyx_b) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1;};
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1;};
  /*--- Intern code ---*/
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1;};
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1;};
  if (__Pyx_InternStrings(__pyx_intern_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1;};
  /*--- String init code ---*/
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1;};
  /*--- Builtin init code ---*/
  __pyx_builtin_ValueError = __Pyx_GetName(__pyx_b, __pyx_n_ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_skip_dispatch = 0;
  /*--- Global init code ---*/
  /*--- Function export code ---*/
  if (__Pyx_ExportFunction("init2object_matrix", (void*)init2object_matrix, "int (void)") < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 0; __pyx_clineno = __LINE__; goto __pyx_L1;}
  /*--- Type init code ---*/
  if (PyType_Ready(&__pyx_type_13object_matrix_Position) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1;}
  if (PyObject_SetAttrString(__pyx_m, "Position", (PyObject *)&__pyx_type_13object_matrix_Position) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_ptype_13object_matrix_Position = &__pyx_type_13object_matrix_Position;
  if (PyType_Ready(&__pyx_type_13object_matrix_Sphere) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1;}
  if (PyObject_SetAttrString(__pyx_m, "Sphere", (PyObject *)&__pyx_type_13object_matrix_Sphere) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 34; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_ptype_13object_matrix_Sphere = &__pyx_type_13object_matrix_Sphere;
  if (PyType_Ready(&__pyx_type_13object_matrix_SphereRef) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1;}
  if (PyObject_SetAttrString(__pyx_m, "SphereRef", (PyObject *)&__pyx_type_13object_matrix_SphereRef) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_ptype_13object_matrix_SphereRef = &__pyx_type_13object_matrix_SphereRef;
  if (PyType_Ready(&__pyx_type_13object_matrix_ObjectContainer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1;}
  if (PyObject_SetAttrString(__pyx_m, "ObjectContainer", (PyObject *)&__pyx_type_13object_matrix_ObjectContainer) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_ptype_13object_matrix_ObjectContainer = &__pyx_type_13object_matrix_ObjectContainer;
  if (PyType_Ready(&__pyx_type_13object_matrix___ObjectContainer_iterneighbors_iter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1;}
  if (PyObject_SetAttrString(__pyx_m, "__ObjectContainer_iterneighbors_iter", (PyObject *)&__pyx_type_13object_matrix___ObjectContainer_iterneighbors_iter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 105; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_ptype_13object_matrix___ObjectContainer_iterneighbors_iter = &__pyx_type_13object_matrix___ObjectContainer_iterneighbors_iter;
  if (PyType_Ready(&__pyx_type_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1;}
  if (PyObject_SetAttrString(__pyx_m, "__ObjectContainer_iterneighbors_cyclic_iter", (PyObject *)&__pyx_type_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 138; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_ptype_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter = &__pyx_type_13object_matrix___ObjectContainer_iterneighbors_cyclic_iter;
  /*--- Type import code ---*/
  /*--- Function import code ---*/
  init2object_matrix();
  return;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix");
}

PyMODINIT_FUNC init2object_matrix(void); /*proto*/
PyMODINIT_FUNC init2object_matrix(void) {
  static int __Pyx_unique = 0;
  if (__Pyx_unique==1) return;
  __Pyx_unique = 1;
  PyObject *__pyx_1 = 0;
  /*--- Execution code ---*/

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":174
 *     cdef __impl_object_container *pimpl
 * 
 *     def __cinit__(self, world_size = 1.0, cells_per_side = 1):             # <<<<<<<<<<<<<< 
 *         self.pimpl = __impl_object_container_new(world_size, cells_per_side)
 * 
 */
  __pyx_1 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1;}
  __pyx_k_1 = __pyx_1;
  __pyx_1 = 0;

  /* "/home/moriyoshi/src/objectmatrix/python/__init__.pyx":204
 *         def __get__(self): return self.pimpl.matrix_size()
 * 
 *     property cell_size:             # <<<<<<<<<<<<<< 
 *         def __get__(self): return self.pimpl.cell_size()
 * 
 */
  return;
  __pyx_L1:;
  Py_XDECREF(__pyx_1);
  __Pyx_AddTraceback("object_matrix");
}

static char *__pyx_filenames[] = {
  "__init__.pyx",
  "object_matrix",
};

/* Runtime support code */

static void __pyx_init_filenames(void) {
  __pyx_f = __pyx_filenames;
}

static INLINE void __Pyx_RaiseArgtupleTooLong(
    Py_ssize_t num_expected,
    Py_ssize_t num_found)
{
    const char* error_message =
    #if PY_VERSION_HEX < 0x02050000
        "function takes at most %d positional arguments (%d given)";
    #else
        "function takes at most %zd positional arguments (%zd given)";
    #endif
    PyErr_Format(PyExc_TypeError, error_message, num_expected, num_found);
}

static int __Pyx_ArgTypeTest(PyObject *obj, PyTypeObject *type, int none_allowed, char *name) {
    if (!type) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if ((none_allowed && obj == Py_None) || PyObject_TypeCheck(obj, type))
        return 1;
    PyErr_Format(PyExc_TypeError,
        "Argument '%s' has incorrect type (expected %s, got %s)",
        name, type->tp_name, obj->ob_type->tp_name);
    return 0;
}

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name) {
    PyObject *result;
    result = PyObject_GetAttr(dict, name);
    if (!result)
        PyErr_SetObject(PyExc_NameError, name);
    return result;
}

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb) {
    Py_XINCREF(type);
    Py_XINCREF(value);
    Py_XINCREF(tb);
    /* First, check the traceback argument, replacing None with NULL. */
    if (tb == Py_None) {
        Py_DECREF(tb);
        tb = 0;
    }
    else if (tb != NULL && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto raise_error;
    }
    /* Next, replace a missing value with None */
    if (value == NULL) {
        value = Py_None;
        Py_INCREF(value);
    }
    #if PY_VERSION_HEX < 0x02050000
    if (!PyClass_Check(type))
    #else
    if (!PyType_Check(type))
    #endif
    {
        /* Raising an instance.  The value should be a dummy. */
        if (value != Py_None) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        /* Normalize to raise <class>, <instance> */
        Py_DECREF(value);
        value = type;
        #if PY_VERSION_HEX < 0x02050000
            if (PyInstance_Check(type)) {
                type = (PyObject*) ((PyInstanceObject*)type)->in_class;
                Py_INCREF(type);
            }
            else {
                type = 0;
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception must be an old-style class or instance");
                goto raise_error;
            }
        #else
            type = (PyObject*) type->ob_type;
            Py_INCREF(type);
            if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception class must be a subclass of BaseException");
                goto raise_error;
            }
        #endif
    }
    PyErr_Restore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}

static int __Pyx_InternStrings(__Pyx_InternTabEntry *t) {
    while (t->p) {
        *t->p = PyString_InternFromString(t->s);
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}

static int __Pyx_ExportFunction(char *name, void *f, char *sig) {
    PyObject *d = 0;
    PyObject *p = 0;
    d = PyObject_GetAttrString(__pyx_m, "__pyx_capi__");
    if (!d) {
        PyErr_Clear();
        d = PyDict_New();
        if (!d)
            goto bad;
        Py_INCREF(d);
        if (PyModule_AddObject(__pyx_m, "__pyx_capi__", d) < 0)
            goto bad;
    }
    p = PyCObject_FromVoidPtrAndDesc(f, sig, 0);
    if (!p)
        goto bad;
    if (PyDict_SetItemString(d, name, p) < 0)
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(p);
    Py_XDECREF(d);
    return -1;
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"

static void __Pyx_AddTraceback(char *funcname) {
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    PyObject *py_globals = 0;
    PyObject *empty_string = 0;
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    
    py_srcfile = PyString_FromString(__pyx_filename);
    if (!py_srcfile) goto bad;
    if (__pyx_clineno) {
        py_funcname = PyString_FromFormat( "%s (%s:%u)", funcname, __pyx_cfilenm, __pyx_clineno);
    }
    else {
        py_funcname = PyString_FromString(funcname);
    }
    if (!py_funcname) goto bad;
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    empty_string = PyString_FromString("");
    if (!empty_string) goto bad;
    py_code = PyCode_New(
        0,            /*int argcount,*/
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        empty_string, /*PyObject *code,*/
        __pyx_empty_tuple,  /*PyObject *consts,*/
        __pyx_empty_tuple,  /*PyObject *names,*/
        __pyx_empty_tuple,  /*PyObject *varnames,*/
        __pyx_empty_tuple,  /*PyObject *freevars,*/
        __pyx_empty_tuple,  /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        __pyx_lineno,   /*int firstlineno,*/
        empty_string  /*PyObject *lnotab*/
    );
    if (!py_code) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_Get(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = __pyx_lineno;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    Py_XDECREF(empty_string);
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

/* Type Conversion Functions */

static INLINE Py_ssize_t __pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}

static INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   if (x == Py_True) return 1;
   else if (x == Py_False) return 0;
   else return PyObject_IsTrue(x);
}

static INLINE PY_LONG_LONG __pyx_PyInt_AsLongLong(PyObject* x) {
    if (PyInt_CheckExact(x)) {
        return PyInt_AS_LONG(x);
    }
    else if (PyLong_CheckExact(x)) {
        return PyLong_AsLongLong(x);
    }
    else {
        PY_LONG_LONG val;
        PyObject* tmp = PyNumber_Int(x); if (!tmp) return (PY_LONG_LONG)-1;
        val = __pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static INLINE unsigned PY_LONG_LONG __pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    if (PyInt_CheckExact(x)) {
        long val = PyInt_AS_LONG(x);
        if (unlikely(val < 0)) {
            PyErr_SetString(PyExc_TypeError, "Negative assignment to unsigned type.");
            return (unsigned PY_LONG_LONG)-1;
        }
        return val;
    }
    else if (PyLong_CheckExact(x)) {
        return PyLong_AsUnsignedLongLong(x);
    }
    else {
        PY_LONG_LONG val;
        PyObject* tmp = PyNumber_Int(x); if (!tmp) return (PY_LONG_LONG)-1;
        val = __pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}


static INLINE unsigned char __pyx_PyInt_unsigned_char(PyObject* x) {
    if (sizeof(unsigned char) < sizeof(long)) {
        long long_val = __pyx_PyInt_AsLong(x);
        unsigned char val = (unsigned char)long_val;
        if (unlikely((val != long_val)  || (long_val < 0))) {
            PyErr_SetString(PyExc_OverflowError, "value too large to convert to unsigned char");
            return (unsigned char)-1;
        }
        return val;
    }
    else {
        return __pyx_PyInt_AsLong(x);
    }
}

static INLINE unsigned short __pyx_PyInt_unsigned_short(PyObject* x) {
    if (sizeof(unsigned short) < sizeof(long)) {
        long long_val = __pyx_PyInt_AsLong(x);
        unsigned short val = (unsigned short)long_val;
        if (unlikely((val != long_val)  || (long_val < 0))) {
            PyErr_SetString(PyExc_OverflowError, "value too large to convert to unsigned short");
            return (unsigned short)-1;
        }
        return val;
    }
    else {
        return __pyx_PyInt_AsLong(x);
    }
}

static INLINE char __pyx_PyInt_char(PyObject* x) {
    if (sizeof(char) < sizeof(long)) {
        long long_val = __pyx_PyInt_AsLong(x);
        char val = (char)long_val;
        if (unlikely((val != long_val) )) {
            PyErr_SetString(PyExc_OverflowError, "value too large to convert to char");
            return (char)-1;
        }
        return val;
    }
    else {
        return __pyx_PyInt_AsLong(x);
    }
}

static INLINE short __pyx_PyInt_short(PyObject* x) {
    if (sizeof(short) < sizeof(long)) {
        long long_val = __pyx_PyInt_AsLong(x);
        short val = (short)long_val;
        if (unlikely((val != long_val) )) {
            PyErr_SetString(PyExc_OverflowError, "value too large to convert to short");
            return (short)-1;
        }
        return val;
    }
    else {
        return __pyx_PyInt_AsLong(x);
    }
}

static INLINE int __pyx_PyInt_int(PyObject* x) {
    if (sizeof(int) < sizeof(long)) {
        long long_val = __pyx_PyInt_AsLong(x);
        int val = (int)long_val;
        if (unlikely((val != long_val) )) {
            PyErr_SetString(PyExc_OverflowError, "value too large to convert to int");
            return (int)-1;
        }
        return val;
    }
    else {
        return __pyx_PyInt_AsLong(x);
    }
}

static INLINE long __pyx_PyInt_long(PyObject* x) {
    if (sizeof(long) < sizeof(long)) {
        long long_val = __pyx_PyInt_AsLong(x);
        long val = (long)long_val;
        if (unlikely((val != long_val) )) {
            PyErr_SetString(PyExc_OverflowError, "value too large to convert to long");
            return (long)-1;
        }
        return val;
    }
    else {
        return __pyx_PyInt_AsLong(x);
    }
}

static INLINE signed char __pyx_PyInt_signed_char(PyObject* x) {
    if (sizeof(signed char) < sizeof(long)) {
        long long_val = __pyx_PyInt_AsLong(x);
        signed char val = (signed char)long_val;
        if (unlikely((val != long_val) )) {
            PyErr_SetString(PyExc_OverflowError, "value too large to convert to signed char");
            return (signed char)-1;
        }
        return val;
    }
    else {
        return __pyx_PyInt_AsLong(x);
    }
}

static INLINE signed short __pyx_PyInt_signed_short(PyObject* x) {
    if (sizeof(signed short) < sizeof(long)) {
        long long_val = __pyx_PyInt_AsLong(x);
        signed short val = (signed short)long_val;
        if (unlikely((val != long_val) )) {
            PyErr_SetString(PyExc_OverflowError, "value too large to convert to signed short");
            return (signed short)-1;
        }
        return val;
    }
    else {
        return __pyx_PyInt_AsLong(x);
    }
}

static INLINE signed int __pyx_PyInt_signed_int(PyObject* x) {
    if (sizeof(signed int) < sizeof(long)) {
        long long_val = __pyx_PyInt_AsLong(x);
        signed int val = (signed int)long_val;
        if (unlikely((val != long_val) )) {
            PyErr_SetString(PyExc_OverflowError, "value too large to convert to signed int");
            return (signed int)-1;
        }
        return val;
    }
    else {
        return __pyx_PyInt_AsLong(x);
    }
}

static INLINE signed long __pyx_PyInt_signed_long(PyObject* x) {
    if (sizeof(signed long) < sizeof(long)) {
        long long_val = __pyx_PyInt_AsLong(x);
        signed long val = (signed long)long_val;
        if (unlikely((val != long_val) )) {
            PyErr_SetString(PyExc_OverflowError, "value too large to convert to signed long");
            return (signed long)-1;
        }
        return val;
    }
    else {
        return __pyx_PyInt_AsLong(x);
    }
}

static INLINE long double __pyx_PyInt_long_double(PyObject* x) {
    if (sizeof(long double) < sizeof(long)) {
        long long_val = __pyx_PyInt_AsLong(x);
        long double val = (long double)long_val;
        if (unlikely((val != long_val) )) {
            PyErr_SetString(PyExc_OverflowError, "value too large to convert to long double");
            return (long double)-1;
        }
        return val;
    }
    else {
        return __pyx_PyInt_AsLong(x);
    }
}
