#!/usr/bin/env/python

import sys

import numpy
import scipy.io
from matplotlib.pylab import *


N_A = 6.0221367e23

def plot_data( N, T, fmt ):
    T = numpy.array( T )

    mean = T.mean(1)
    std_err = T.std()/math.sqrt(len(T))

    #errorbar( N, mean, yerr=std_err, fmt=fmt )
    print N, mean
    loglog( N, mean, fmt )


T=0.001
V=40e-15
#N=100
#C=


data_V = [
# T=1, N=30, V=4e-14
[22.396,21.4883,20.5901,],
# T=0.1, N=100, V=4e-14
[173.971,169.842,151.337,],
# T=0.1, N=300, V=4e-14
[1014.39,909.095,1085.89,],
# T=0.01, N=1000, V=4e-14
[8231.64,8690.84,9113.82,],
# T=0.001, N=3000, V=4e-14
[55963.5,57211.7,62346.3,],
# T=0.001, N=10000, V=4e-14
[508828,462754,498671,],
# T=0.001, N=30000, V=4e-14
[3.77427e+06,3.71452e+06,3.56106e+06,],
# T=0.0001, N=100000, V=4e-14
[4.79992e+07,5.40697e+07,4.89929e+07,],
# T=1e-05, N=300000, V=4e-14
[8.54453e+08,9.62899e+08,1.07921e+09,],
]

data_C = [
# T=0.1, N=30, V=4e-16
[484.066,485.141,445.17,],
# T=0.01, N=100, V=1.3e-15
[1705.34,1786.88,1601.78,],
# T=0.01, N=300, V=4e-15
[5023.35,5301.17,4957.2,],
# T=0.001, N=1000, V=1.3e-14
[19560.7,18185.7,17589.3,],
# T=0.001, N=3000, V=4e-14
[56194.1,53794.3,58106.1,],
# T=0.001, N=10000, V=1.3e-13
[191421,193024,214388,],
# T=0.001, N=30000, V=4e-13
[577085,599213,603250,],
# T=0.0001, N=100000, V=1.3e-12
[4.80536e+06,4.85905e+06,4.92604e+06,],
# T=0.0001, N=300000, V=4e-12
[1.90902e+07,2.01664e+07,1.95424e+07,],
]


data_N300 = [
# T=0.01, N=300, V=4e-13
[397.484,223.208,335.77,],
# T=0.01, N=300, V=4e-14
[1024.77,1261.94,1096.29,],
# T=0.001, N=300, V=4e-15
[5129,4306.26,5631.82,],
# T=0.001, N=300, V=4e-16
[56705,29575.4,52085.5,],
# T=0.0001, N=300, V=4e-17
[640690,1.61436e+06,507055,],
# T=1e-05, N=300, V=4e-18
[1.41336e+07,2.21781e+07,2.45075e+07,],
# T=1e-06, N=300, V=4e-19
[1.95089e+08,2.73275e+08,2.069e+08,],
# T=1e-06, N=300, V=1e-19
#[1.67064e+09,1.72815e+09,1.70991e+09,],
]





data_N3000 = [
# T=0.01, N=3000, V=4e-12
[2816.14,2636.4,2925.99,],
# T=0.01, N=3000, V=4e-13
[11614.1,10752.4,11324.9,],
# T=0.001, N=3000, V=4e-14
[58727,55016.6,57321.9,],
# T=0.001, N=3000, V=4e-15
[316766,361824,388791,],
# T=0.001, N=3000, V=4e-16
[6.25142e+06,6.32483e+06,6.35022e+06,],
# T=0.0001, N=3000, V=4e-17
[2.17666e+08,2.18491e+08,2.19281e+08,],
# T=1e-05, N=3000, V=4e-18
[2.31403e+09,2.39566e+09,2.48136e+09,],
]






Nv = numpy.array([30,100,300,1000,3000,10000,30000,100000,300000])
Nc = numpy.array([30,100,300,1000,3000,10000,30000,100000,300000])#,1000000])

# (40e-18 ** (1/3.0))**2 / 1e-12
# = 11.69607095285148

Nb = numpy.array([10,30,100,300,1000,3000,10000])#,30000,100000])
data_bd_5 = numpy.array([\
        #t=1e-8, dt = 1e-5 tau
        [0.0485391616821,0.0476109981537,0.0482919216156],
        [0.138695001602,0.139840841293,0.139472007751],
        [0.45738196373,0.454463005066,0.458449840546],
        [1.35839486122,1.36714601517,1.36983513832],
        [4.74575400352,4.73176693916,4.71269416809],
        [14.96296978,14.7860958576,14.9349989891],
        [50.471544981,51.1204040051,51.8594009876],
#        [0,0,0],
#        [0,0,0]]
        ])
data_bd_5 *=  11.696/ 1e-8
data_bd_6 = data_bd_5 * 10

X = numpy.array([5,100,300,1000,3000,10000,30000,100000,5e6])

#for i in range( len(Nv) ):
plot_data( Nv, data_V,'kx' )
#loglog( X, 0.15* X**(5.0/3), 'k--' )
loglog( X, 0.004* X**(6.0/3), 'k--' )

figtext( .3, .17, r'(2) V = 40 fL' )
figtext( .8, .74, r'$t \ \propto \ N^{5/3}$', color='k' )


#for i in range( len(Nc) ):
plot_data( Nc, data_C,'ko' )
loglog( X, 17* X, 'k-' )

figtext( .135, .34, r'(1) C = 100 nM' )
figtext( .8, .6, r'$t \  \propto \ N$', color='k' )

#plot_data( Nb, data_bd_6,'k.' )

loglog( X, 5e7* X, 'b:' ) # 1e-6 tau
loglog( X, 5e4* X, 'b:' ) # 1e-3 tau

figtext( .2, .78, r'BD', color='k' )

figtext( .2, .61, r'BD (relaxed)', color='k' )

#loglog( data1[0] , data1[1], 'o-', label='Vol. = 1e-15 L' )
#loglog( data2[0] , data2[1], 'o-', label='# particles = 600' )
#loglog( data3[0] , data3[1], 'o-', label='Conc. = 1e-6 M' )

xlabel( 'N [# particles]' )
#xlabel( 'Concentration [M]' )
ylabel( 'time [sec]' )
#legend()
xlim(4,1e7)
ylim(1.1,2e11)

grid()

Cx3000=numpy.array([
#    9.35e-11,
    9.35e-10,
    9.35e-9,
    9.35e-8,#N=3000,V=40e-15
    9.35e-7,#N=3000,V=40e-16
    9.35e-6,#N=3000,V=40e-17
    9.35e-5,#N=3000,V=40e-18
    9.35e-4

    ])

Cx300=numpy.array([
    9.35e-10,#N=300,V=40e-14
    9.35e-9,#N=300,V=40e-15
    9.35e-8,#16
    9.35e-7,#17
    9.35e-6,#18
    9.35e-5,#19
    9.35e-4,#20
    3.74e-3#1e-21
    #9.35e-3,#4e-21
    ])

#data_N3000 *= 11696
#data_N300 *= 11696

axes([.61,.21,.27,.28])

# M-> uM
Cx300 *= 1e6
Cx3000 *= 1e6

for i in range( len(Cx3000) ):
    plot_data( Cx3000, data_N3000,'k+' )
#loglog( Cx3000, 5e1** Cx3000, 'b:' )
bd3000 = numpy.array([17.1796619892,17.4832251072,17.5032970905]).mean()
bd3000 *= 11.69607 / 1e-9
loglog( [1e-4,1e4],[bd3000,bd3000], 'b:' )


for i in range( len(Cx300) ):
    plot_data( Cx300, data_N300,'kd' )
loglog( Cx300, 2.5e4* Cx300**(2.0/3.0), 'k-.', label='C^(4/3)' )
loglog( Cx300, 2.5e4* Cx300**(4.0/3.0), 'k-.', label='C^(4/3)' )

figtext( .73, .22, r'(3a) N = 300' )
figtext( .79, .28, r'$t \ \propto \ C^{2/3}$', color='k' )
figtext( .62, .35, r'(3b) N = 3000' )

#bd 300
bd300 = numpy.array([1.62390208244,1.62284588814,1.63388109207]).mean()
bd300 *= 11.69607 / 1e-9
loglog( [1e-5,1e5],[bd300,bd300], 'b:' )

figtext( .63, .405, r'BD', color='k' )

xlabel( 'Concentration [uM]' )
ylabel( 'time [sec]' )

#xlim(5e-10,5e-2)
#ylim(1e2,5e9)
#xlim(5e-10,5e-3)
xlim(2e-4,9e3)
ylim(2e2,8e11)

show()
#savefig('fig1.eps')




#>>> _gfrd.S_irr( .0001 * 1e-8**2/1e-12, 1e-8, 10 * 1e-8 * 1e-12, 1e-12, 1e-8 )
#0.99116163945434221


