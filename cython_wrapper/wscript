#!/usr/bin/env python

from waflib import Logs

top = '.'
out = 'build'

pxdfiles = [
    'ecell4/core.pxd', 'ecell4/multiset.pxd', 'ecell4/shared_ptr.pxd',
    'ecell4/types.pxd'
    ]


def options(ctx):
    ctx.load('compiler_c')
    ctx.load('compiler_cxx')
    ctx.load('python')
    ctx.load('cython')
    # ctx.load('cython_cache', tooldir='.')

def configure(ctx):
    ctx.load('compiler_c')
    ctx.load('compiler_cxx')
    ctx.load('python')
    ctx.check_python_headers()

    ctx.find_program('cython')
    try:
        ctx.load('cython')
    except ctx.errors.ConfigurationError:
        Logs.warn('cython not found')

    # # check cython's version
    # try:
    #     from Cython.Compiler.Version import version
    #     print 'Cython version: ', version
    #     if float(version) < minimal_cython_version:
    #         raise ctx.errors.ConfigurationError
    # except ctx.errors.ConfigurationError:
    #     Logs.warn('Your cython is too old.')


def build(bld):
    # build wrapper for core.
    bld.install_files('${PYTHONDIR}/ecell4', pxdfiles)
    bld.install_files('${PYTHONDIR}/ecell4', '__init__.py')

    bld(
        features = 'cxx cxxshlib pyext',
        source = 'ecell4/core.pyx',
        target = 'core',
        install_path = '${PYTHONDIR}/ecell4',
        lib = ['ecell4-core'])
